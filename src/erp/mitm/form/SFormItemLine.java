/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SFormItemLine.java
 *
 * Created on 21/06/2010, 04:02:57 PM
 */

package erp.mitm.form;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataUtilities;
import erp.lib.SLibConstants;
import erp.lib.SLibUtilities;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.mitm.data.SDataItemGeneric;
import erp.mitm.data.SDataItemLine;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.JComboBox;
import javax.swing.JTextField;

/**
 *
 * @author Alfonso Flores, Sergio Flores
 */
public class SFormItemLine extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.ItemListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mitm.data.SDataItemLine moItemLine;
    private erp.lib.form.SFormField moFieldFkItemGenericId;
    private erp.lib.form.SFormField moFieldItemLine;
    private erp.lib.form.SFormField moFieldItemLineShort;
    private erp.lib.form.SFormField moFieldCode;
    private erp.lib.form.SFormField moFieldFkBrandId;
    private erp.lib.form.SFormField moFieldFkManufacturerId;
    private erp.lib.form.SFormField moFieldFkElementId;
    private erp.lib.form.SFormField moFieldIsFixedBrand;
    private erp.lib.form.SFormField moFieldIsFixedManufacturer;
    private erp.lib.form.SFormField moFieldIsFixedElement;
    private erp.lib.form.SFormField moFieldFkVarietyType01Id;
    private erp.lib.form.SFormField moFieldFkVarietyType02Id;
    private erp.lib.form.SFormField moFieldFkVarietyType03Id;
    private erp.lib.form.SFormField moFieldIsDeleted;

    /** Creates new form SFormItemLine */
    public SFormItemLine(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;
        mnFormType = SDataConstants.ITMU_LINE;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpRegistry = new javax.swing.JPanel();
        jpRegistry1 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlFkItemGenericId = new javax.swing.JLabel();
        jcbFkItemGenericId = new javax.swing.JComboBox();
        jbFkItemGenericId = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jlItemLine = new javax.swing.JLabel();
        jtfItemLine = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jlItemLineShort = new javax.swing.JLabel();
        jtfItemLineShort = new javax.swing.JTextField();
        jbCopyItemLine = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        jtfCode = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jlFkBrandId = new javax.swing.JLabel();
        jcbFkBrandId = new javax.swing.JComboBox();
        jbFkBrandId = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jlFkManufacturerId = new javax.swing.JLabel();
        jcbFkManufacturerId = new javax.swing.JComboBox();
        jbFkManufacturerId = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jlFkElementId = new javax.swing.JLabel();
        jcbFkElementId = new javax.swing.JComboBox();
        jbFkElementId = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jckIsFixedBrand = new javax.swing.JCheckBox();
        jPanel19 = new javax.swing.JPanel();
        jckIsFixedManufacturer = new javax.swing.JCheckBox();
        jPanel20 = new javax.swing.JPanel();
        jckIsFixedElement = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jlFkVarietyType01Id = new javax.swing.JLabel();
        jcbFkVarietyType01Id = new javax.swing.JComboBox();
        jbFkVarietyType01Id = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        jlFkVarietyType02Id = new javax.swing.JLabel();
        jcbFkVarietyType02Id = new javax.swing.JComboBox();
        jbFkVarietyType02Id = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jlFkVarietyType03Id = new javax.swing.JLabel();
        jcbFkVarietyType03Id = new javax.swing.JComboBox();
        jbFkVarietyType03Id = new javax.swing.JButton();
        jPanel27 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jckIsDeleted = new javax.swing.JCheckBox();
        jpCommand = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Línea de ítem");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jpRegistry.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jpRegistry.setLayout(new java.awt.BorderLayout());

        jpRegistry1.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(10, 1, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFkItemGenericId.setText("Ítem genérico: *");
        jlFkItemGenericId.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlFkItemGenericId);

        jcbFkItemGenericId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkItemGenericId.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel3.add(jcbFkItemGenericId);

        jbFkItemGenericId.setText("jButton1");
        jbFkItemGenericId.setToolTipText("Seleccionar ítem genérico");
        jbFkItemGenericId.setFocusable(false);
        jbFkItemGenericId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel3.add(jbFkItemGenericId);

        jPanel1.add(jPanel3);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlItemLine.setText("Nombre: *");
        jlItemLine.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jlItemLine);

        jtfItemLine.setText("TEXT");
        jtfItemLine.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel12.add(jtfItemLine);

        jPanel1.add(jPanel12);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlItemLineShort.setText("Nombre corto: *");
        jlItemLineShort.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel13.add(jlItemLineShort);

        jtfItemLineShort.setText("TEXT");
        jtfItemLineShort.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel13.add(jtfItemLineShort);

        jbCopyItemLine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_action.gif"))); // NOI18N
        jbCopyItemLine.setToolTipText("Copiar nombre");
        jbCopyItemLine.setFocusable(false);
        jbCopyItemLine.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel13.add(jbCopyItemLine);

        jPanel1.add(jPanel13);

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código: *");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel14.add(jlCode);

        jtfCode.setText("TEXT");
        jtfCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel14.add(jtfCode);

        jPanel1.add(jPanel14);

        jPanel15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFkBrandId.setText("Marca: *");
        jlFkBrandId.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel15.add(jlFkBrandId);

        jcbFkBrandId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkBrandId.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel15.add(jcbFkBrandId);

        jbFkBrandId.setText("jButton2");
        jbFkBrandId.setToolTipText("Seleccionar marca");
        jbFkBrandId.setFocusable(false);
        jbFkBrandId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel15.add(jbFkBrandId);

        jPanel1.add(jPanel15);

        jPanel16.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFkManufacturerId.setText("Fabricante: *");
        jlFkManufacturerId.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel16.add(jlFkManufacturerId);

        jcbFkManufacturerId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkManufacturerId.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel16.add(jcbFkManufacturerId);

        jbFkManufacturerId.setText("jButton3");
        jbFkManufacturerId.setToolTipText("Seleccionar fabricante");
        jbFkManufacturerId.setFocusable(false);
        jbFkManufacturerId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel16.add(jbFkManufacturerId);

        jPanel1.add(jPanel16);

        jPanel17.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFkElementId.setText("Elemento: *");
        jlFkElementId.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel17.add(jlFkElementId);

        jcbFkElementId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkElementId.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel17.add(jcbFkElementId);

        jbFkElementId.setText("jButton4");
        jbFkElementId.setToolTipText("Seleccionar elemento");
        jbFkElementId.setFocusable(false);
        jbFkElementId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel17.add(jbFkElementId);

        jPanel1.add(jPanel17);

        jPanel18.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jckIsFixedBrand.setText("Marca fija");
        jckIsFixedBrand.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel18.add(jckIsFixedBrand);

        jPanel1.add(jPanel18);

        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jckIsFixedManufacturer.setText("Fabricante fijo");
        jckIsFixedManufacturer.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel19.add(jckIsFixedManufacturer);

        jPanel1.add(jPanel19);

        jPanel20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jckIsFixedElement.setText("Elemento fijo");
        jckIsFixedElement.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel20.add(jckIsFixedElement);

        jPanel1.add(jPanel20);

        jpRegistry1.add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridLayout(10, 1, 0, 5));

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel2.add(jPanel10);

        jPanel21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel2.add(jPanel21);

        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel2.add(jPanel22);

        jPanel23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel2.add(jPanel23);

        jPanel24.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFkVarietyType01Id.setText("Tipo variedad 1: *");
        jlFkVarietyType01Id.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel24.add(jlFkVarietyType01Id);

        jcbFkVarietyType01Id.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkVarietyType01Id.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel24.add(jcbFkVarietyType01Id);

        jbFkVarietyType01Id.setText("jButton5");
        jbFkVarietyType01Id.setToolTipText("Seleccionar tipo de variedad");
        jbFkVarietyType01Id.setFocusable(false);
        jbFkVarietyType01Id.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel24.add(jbFkVarietyType01Id);

        jPanel2.add(jPanel24);

        jPanel25.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFkVarietyType02Id.setText("Tipo variedad 2: *");
        jlFkVarietyType02Id.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel25.add(jlFkVarietyType02Id);

        jcbFkVarietyType02Id.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkVarietyType02Id.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel25.add(jcbFkVarietyType02Id);

        jbFkVarietyType02Id.setText("jButton6");
        jbFkVarietyType02Id.setToolTipText("Seleccionar tipo de variedad");
        jbFkVarietyType02Id.setFocusable(false);
        jbFkVarietyType02Id.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel25.add(jbFkVarietyType02Id);

        jPanel2.add(jPanel25);

        jPanel26.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFkVarietyType03Id.setText("Tipo variedad 3: *");
        jlFkVarietyType03Id.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel26.add(jlFkVarietyType03Id);

        jcbFkVarietyType03Id.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkVarietyType03Id.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel26.add(jcbFkVarietyType03Id);

        jbFkVarietyType03Id.setText("jButton7");
        jbFkVarietyType03Id.setToolTipText("Seleccionar tipo de variedad");
        jbFkVarietyType03Id.setFocusable(false);
        jbFkVarietyType03Id.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel26.add(jbFkVarietyType03Id);

        jPanel2.add(jPanel26);

        jPanel27.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel2.add(jPanel27);

        jPanel28.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel2.add(jPanel28);

        jPanel29.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jckIsDeleted.setForeground(new java.awt.Color(204, 0, 0));
        jckIsDeleted.setText("Registro eliminado");
        jckIsDeleted.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel29.add(jckIsDeleted);

        jPanel2.add(jPanel29);

        jpRegistry1.add(jPanel2, java.awt.BorderLayout.EAST);

        jpRegistry.add(jpRegistry1, java.awt.BorderLayout.NORTH);

        getContentPane().add(jpRegistry, java.awt.BorderLayout.CENTER);

        jpCommand.setPreferredSize(new java.awt.Dimension(392, 33));
        jpCommand.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jpCommand.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jpCommand.add(jbCancel);

        getContentPane().add(jpCommand, java.awt.BorderLayout.SOUTH);

        setSize(new java.awt.Dimension(640, 400));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void initComponentsExtra() {
        mvFields = new Vector<SFormField>();

        moFieldFkItemGenericId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkItemGenericId, jlFkItemGenericId);
        moFieldFkItemGenericId.setPickerButton(jbFkItemGenericId);
        moFieldItemLine = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfItemLine, jlItemLine);
        moFieldItemLine.setLengthMax(50);
        moFieldItemLineShort = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfItemLineShort, jlItemLineShort);
        moFieldItemLineShort.setLengthMax(25);
        moFieldCode = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfCode, jlCode);
        moFieldCode.setLengthMax(5);
        moFieldFkBrandId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkBrandId, jlFkBrandId);
        moFieldFkBrandId.setPickerButton(jbFkBrandId);
        moFieldFkManufacturerId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkManufacturerId, jlFkManufacturerId);
        moFieldFkManufacturerId.setPickerButton(jbFkManufacturerId);
        moFieldFkElementId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkElementId, jlFkElementId);
        moFieldFkElementId.setPickerButton(jbFkElementId);
        moFieldIsFixedBrand = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsFixedBrand);
        moFieldIsFixedManufacturer = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsFixedManufacturer);
        moFieldIsFixedElement = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsFixedElement);
        moFieldFkVarietyType01Id = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkVarietyType01Id, jlFkVarietyType01Id);
        moFieldFkVarietyType01Id.setPickerButton(jbFkVarietyType01Id);
        moFieldFkVarietyType02Id = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkVarietyType02Id, jlFkVarietyType02Id);
        moFieldFkVarietyType02Id.setPickerButton(jbFkVarietyType02Id);
        moFieldFkVarietyType03Id = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkVarietyType03Id, jlFkVarietyType03Id);
        moFieldFkVarietyType03Id.setPickerButton(jbFkVarietyType03Id);
        moFieldIsDeleted = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsDeleted);

        mvFields.add(moFieldFkItemGenericId);
        mvFields.add(moFieldItemLine);
        mvFields.add(moFieldItemLineShort);
        mvFields.add(moFieldCode);
        mvFields.add(moFieldFkBrandId);
        mvFields.add(moFieldFkManufacturerId);
        mvFields.add(moFieldFkElementId);
        mvFields.add(moFieldIsFixedBrand);
        mvFields.add(moFieldIsFixedManufacturer);
        mvFields.add(moFieldIsFixedElement);
        mvFields.add(moFieldFkVarietyType01Id);
        mvFields.add(moFieldFkVarietyType02Id);
        mvFields.add(moFieldFkVarietyType03Id);
        mvFields.add(moFieldIsDeleted);

        jbOk.addActionListener(this);
        jbCancel.addActionListener(this);
        jbCopyItemLine.addActionListener(this);
        jbFkItemGenericId.addActionListener(this);
        jbFkBrandId.addActionListener(this);
        jbFkManufacturerId.addActionListener(this);
        jbFkElementId.addActionListener(this);
        jbFkVarietyType01Id.addActionListener(this);
        jbFkVarietyType02Id.addActionListener(this);
        jbFkVarietyType03Id.addActionListener(this);
        jtfItemLine.addFocusListener(this);
        jcbFkItemGenericId.addItemListener(this);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), action, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;
            jcbFkItemGenericId.requestFocus();
        }
    }

    private void actionOk() {
        SFormValidation validation = formValidate();

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    private void actionCopyItemLine() {
        if (jtfItemLine.getText().length() > moFieldItemLineShort.getLengthMax()) {
            jtfItemLineShort.setText(jtfItemLine.getText().substring(0, moFieldItemLineShort.getLengthMax() - 1));
        }
        else {
            jtfItemLineShort.setText(jtfItemLine.getText());
        }
    }

    private void actionFkItemGenericId() {
        miClient.pickOption(SDataConstants.ITMX_IGEN_LINE, moFieldFkItemGenericId, null);
    }

    private void actionFkBrandId() {
        miClient.pickOption(SDataConstants.ITMU_BRD, moFieldFkBrandId, null);
    }

    private void actionFkManufacturerId() {
        miClient.pickOption(SDataConstants.ITMU_MFR, moFieldFkManufacturerId, null);
    }

    private void actionFkElementId() {
        miClient.pickOption(SDataConstants.ITMU_EMT, moFieldFkElementId, null);
    }

    private void actionFkVarietyType01Id() {
        miClient.pickOption(SDataConstants.ITMU_TP_VAR, moFieldFkVarietyType01Id, null);
    }

    private void actionFkVarietyType02Id() {
        miClient.pickOption(SDataConstants.ITMU_TP_VAR, moFieldFkVarietyType02Id, null);
    }

    private void actionFkVarietyType03Id() {
        miClient.pickOption(SDataConstants.ITMU_TP_VAR, moFieldFkVarietyType03Id, null);
    }

    private void focusLostItemLine() {
        if (jtfItemLineShort.isEnabled() && SLibUtilities.textTrim(jtfItemLineShort.getText()).length() == 0) {
            actionCopyItemLine();
        }
    }

    private void itemStateFkItemGenericId() {
        SDataItemGeneric generic = null;

        if (jcbFkItemGenericId.getSelectedIndex() <= 0) {
            jtfItemLineShort.setEnabled(false);
            jbCopyItemLine.setEnabled(false);
            jtfItemLineShort.setText("");
        }
        else {
            generic = (SDataItemGeneric) SDataUtilities.readRegistry(miClient, SDataConstants.ITMU_IGEN, moFieldFkItemGenericId.getKeyAsIntArray(), SLibConstants.EXEC_MODE_VERBOSE);
            if (generic.getIsItemShortApplying()) {
                jtfItemLineShort.setEnabled(true);
                jbCopyItemLine.setEnabled(true);
            }
            else {
                jtfItemLineShort.setEnabled(false);
                jbCopyItemLine.setEnabled(false);
                jtfItemLineShort.setText("");
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbCopyItemLine;
    private javax.swing.JButton jbFkBrandId;
    private javax.swing.JButton jbFkElementId;
    private javax.swing.JButton jbFkItemGenericId;
    private javax.swing.JButton jbFkManufacturerId;
    private javax.swing.JButton jbFkVarietyType01Id;
    private javax.swing.JButton jbFkVarietyType02Id;
    private javax.swing.JButton jbFkVarietyType03Id;
    private javax.swing.JButton jbOk;
    private javax.swing.JComboBox jcbFkBrandId;
    private javax.swing.JComboBox jcbFkElementId;
    private javax.swing.JComboBox jcbFkItemGenericId;
    private javax.swing.JComboBox jcbFkManufacturerId;
    private javax.swing.JComboBox jcbFkVarietyType01Id;
    private javax.swing.JComboBox jcbFkVarietyType02Id;
    private javax.swing.JComboBox jcbFkVarietyType03Id;
    private javax.swing.JCheckBox jckIsDeleted;
    private javax.swing.JCheckBox jckIsFixedBrand;
    private javax.swing.JCheckBox jckIsFixedElement;
    private javax.swing.JCheckBox jckIsFixedManufacturer;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlFkBrandId;
    private javax.swing.JLabel jlFkElementId;
    private javax.swing.JLabel jlFkItemGenericId;
    private javax.swing.JLabel jlFkManufacturerId;
    private javax.swing.JLabel jlFkVarietyType01Id;
    private javax.swing.JLabel jlFkVarietyType02Id;
    private javax.swing.JLabel jlFkVarietyType03Id;
    private javax.swing.JLabel jlItemLine;
    private javax.swing.JLabel jlItemLineShort;
    private javax.swing.JPanel jpCommand;
    private javax.swing.JPanel jpRegistry;
    private javax.swing.JPanel jpRegistry1;
    private javax.swing.JTextField jtfCode;
    private javax.swing.JTextField jtfItemLine;
    private javax.swing.JTextField jtfItemLineShort;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        moItemLine = null;
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moItemLine = null;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        moFieldIsFixedBrand.setFieldValue(true);
        moFieldIsFixedManufacturer.setFieldValue(true);
        moFieldIsFixedElement.setFieldValue(true);
        SFormUtilities.locateComboBoxItem(jcbFkBrandId, new int[] { SDataConstantsSys.ITMU_BRD_NA });
        SFormUtilities.locateComboBoxItem(jcbFkManufacturerId, new int[] { SDataConstantsSys.ITMU_MFR_NA });
        SFormUtilities.locateComboBoxItem(jcbFkElementId, new int[] { SDataConstantsSys.ITMU_EMT_NA });
        SFormUtilities.locateComboBoxItem(jcbFkVarietyType01Id, new int[] { SDataConstantsSys.ITMU_TP_VAR_NA });
        SFormUtilities.locateComboBoxItem(jcbFkVarietyType02Id, new int[] { SDataConstantsSys.ITMU_TP_VAR_NA });
        SFormUtilities.locateComboBoxItem(jcbFkVarietyType03Id, new int[] { SDataConstantsSys.ITMU_TP_VAR_NA });

        itemStateFkItemGenericId();

        jckIsDeleted.setEnabled(false);
    }

    @Override
    @SuppressWarnings("unchecked")
    public void formRefreshCatalogues() {
        SFormUtilities.populateComboBox(miClient, jcbFkItemGenericId, SDataConstants.ITMX_IGEN_LINE);
        SFormUtilities.populateComboBox(miClient, jcbFkBrandId, SDataConstants.ITMU_BRD);
        SFormUtilities.populateComboBox(miClient, jcbFkManufacturerId, SDataConstants.ITMU_MFR);
        SFormUtilities.populateComboBox(miClient, jcbFkElementId, SDataConstants.ITMU_EMT);
        SFormUtilities.populateComboBox(miClient, jcbFkVarietyType01Id, SDataConstants.ITMU_TP_VAR);
        SFormUtilities.populateComboBox(miClient, jcbFkVarietyType02Id, SDataConstants.ITMU_TP_VAR);
        SFormUtilities.populateComboBox(miClient, jcbFkVarietyType03Id, SDataConstants.ITMU_TP_VAR);
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        moItemLine = (SDataItemLine) registry;

        moFieldItemLine.setFieldValue(moItemLine.getItemLine());
        moFieldItemLineShort.setFieldValue(moItemLine.getItemLineShort());
        moFieldCode.setFieldValue(moItemLine.getCode());
        moFieldFkItemGenericId.setFieldValue(new int[] { moItemLine.getFkItemGenericId() });
        moFieldFkBrandId.setFieldValue(new int[] { moItemLine.getFkBrandId() });
        moFieldFkManufacturerId.setFieldValue(new int[] { moItemLine.getFkManufacturerId() });
        moFieldFkElementId.setFieldValue(new int[] { moItemLine.getFkElementId() });
        moFieldIsFixedBrand.setFieldValue(moItemLine.getIsFixedBrand());
        moFieldIsFixedManufacturer.setFieldValue(moItemLine.getIsFixedManufacturer());
        moFieldIsFixedElement.setFieldValue(moItemLine.getIsFixedElement());
        moFieldFkVarietyType01Id.setFieldValue(new int[] { moItemLine.getFkVarietyType01Id() });
        moFieldFkVarietyType02Id.setFieldValue(new int[] { moItemLine.getFkVarietyType02Id() });
        moFieldFkVarietyType03Id.setFieldValue(new int[] { moItemLine.getFkVarietyType03Id() });
        moFieldIsDeleted.setFieldValue(moItemLine.getIsDeleted());

        jckIsDeleted.setEnabled(true);
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        if (moItemLine == null) {
            moItemLine = new SDataItemLine();
            moItemLine.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
        }
        else {
            moItemLine.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
        }

        moItemLine.setItemLine(moFieldItemLine.getString());
        moItemLine.setItemLineShort(moFieldItemLineShort.getString());
        moItemLine.setCode(moFieldCode.getString());
        moItemLine.setFkItemGenericId(moFieldFkItemGenericId.getKeyAsIntArray()[0]);
        moItemLine.setFkBrandId(moFieldFkBrandId.getKeyAsIntArray()[0]);
        moItemLine.setFkManufacturerId(moFieldFkManufacturerId.getKeyAsIntArray()[0]);
        moItemLine.setFkElementId(moFieldFkElementId.getKeyAsIntArray()[0]);
        moItemLine.setIsFixedBrand(moFieldIsFixedBrand.getBoolean());
        moItemLine.setIsFixedManufacturer(moFieldIsFixedManufacturer.getBoolean());
        moItemLine.setIsFixedElement(moFieldIsFixedElement.getBoolean());
        moItemLine.setFkVarietyType01Id(moFieldFkVarietyType01Id.getKeyAsIntArray()[0]);
        moItemLine.setFkVarietyType02Id(moFieldFkVarietyType02Id.getKeyAsIntArray()[0]);
        moItemLine.setFkVarietyType03Id(moFieldFkVarietyType03Id.getKeyAsIntArray()[0]);
        moItemLine.setIsDeleted(moFieldIsDeleted.getBoolean());

        return moItemLine;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public java.lang.Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOk) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
            else if (button == jbCopyItemLine) {
                actionCopyItemLine();
                jtfItemLineShort.requestFocus();
            }
            else if (button == jbFkItemGenericId) {
                actionFkItemGenericId();
            }
            else if (button == jbFkBrandId) {
                actionFkBrandId();
            }
            else if (button == jbFkManufacturerId) {
                actionFkManufacturerId();
            }
            else if (button == jbFkElementId) {
                actionFkElementId();
            }
            else if (button == jbFkVarietyType01Id) {
                actionFkVarietyType01Id();
            }
            else if (button == jbFkVarietyType02Id) {
                actionFkVarietyType02Id();
            }
            else if (button == jbFkVarietyType03Id) {
                actionFkVarietyType03Id();
            }
        }
    }

    @Override
    public void focusGained(FocusEvent e) {

    }

    @Override
    public void focusLost(FocusEvent e) {
        if (e.getSource() instanceof JTextField) {
            JTextField textField = (JTextField) e.getSource();

            if (textField == jtfItemLine) {
                focusLostItemLine();
            }
        }
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource() instanceof JComboBox) {
            JComboBox comboBox = (JComboBox) e.getSource();

            if (comboBox == jcbFkItemGenericId) {
                itemStateFkItemGenericId();
            }
        }
    }
}
