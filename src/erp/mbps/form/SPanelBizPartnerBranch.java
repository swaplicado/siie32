/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SPanelBizPartnerBranch.java
 *
 * Created on 22/09/2009, 05:51:39 PM
 */

package erp.mbps.form;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.lib.SLibConstants;
import erp.lib.SLibUtilities;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.lib.table.STableColumnForm;
import erp.lib.table.STableConstants;
import erp.lib.table.STableModel;
import erp.lib.table.STablePane;
import erp.mbps.data.SDataBizPartnerBranch;
import erp.mbps.data.SDataBizPartnerBranchAddress;
import erp.mbps.data.SDataBizPartnerBranchAddressRow;
import erp.mbps.data.SDataBizPartnerBranchBankAccount;
import erp.mbps.data.SDataBizPartnerBranchBankAccountRow;
import erp.mbps.data.SDataBizPartnerBranchContact;
import erp.mbps.data.SDataBizPartnerBranchContactRow;
import erp.mbps.data.SDataBizPartnerBranchNote;
import erp.mbps.data.SDataBizPartnerBranchNoteRow;
import erp.mod.SModSysConsts;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import sa.gui.util.SUtilConsts;
import sa.lib.SLibUtils;

/**
 *
 * @author Alfonso Flores, Sergio Flores
 */
public class SPanelBizPartnerBranch extends javax.swing.JPanel implements erp.lib.form.SFormInterface, java.awt.event.ActionListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mbps.data.SDataBizPartnerBranch moBizPartnerBranch;
    private erp.mbps.data.SDataBizPartnerBranchAddress moBizPartnerBranchAddress;
    private erp.mbps.data.SDataBizPartnerBranchContact moBizPartnerBranchContact;
    private erp.lib.form.SFormField moFieldBizPartnerBranch;
    private erp.lib.form.SFormField moFieldFkTaxRegionId_n;
    private erp.lib.form.SFormField moFieldFkAddressFormatTypeId_n;
    private erp.lib.form.SFormField moFieldTelAreaCode01;
    private erp.lib.form.SFormField moFieldTelNumber01;
    private erp.lib.form.SFormField moFieldTelExt01;
    private erp.lib.form.SFormField moFieldFkTelephoneType01Id;
    private erp.lib.form.SFormField moFieldTelAreaCode02;
    private erp.lib.form.SFormField moFieldTelNumber02;
    private erp.lib.form.SFormField moFieldTelExt02;
    private erp.lib.form.SFormField moFieldFkTelephoneType02Id;
    private erp.lib.form.SFormField moFieldTelAreaCode03;
    private erp.lib.form.SFormField moFieldTelNumber03;
    private erp.lib.form.SFormField moFieldTelExt03;
    private erp.lib.form.SFormField moFieldFkTelephoneType03Id;
    private erp.lib.form.SFormField moFieldEmail;
    private erp.lib.form.SFormField moFieldIsAddressPrintable;
    private erp.lib.form.SFormField moFieldIsDeleted;

    private erp.mbps.form.SFormBizPartnerBranchAddress moFormBizPartnerBranchAddress;
    private erp.mbps.form.SFormBizPartnerBranchBankAccount moFormBizPartnerBranchBankAccount;
    private erp.mbps.form.SFormBizPartnerBranchContact moFormBizPartnerBranchContact;
    private erp.mbps.form.SFormBizPartnerBranchNote moFormBizPartnerBranchNote;

    private erp.mbps.form.SPanelBizPartnerBranchAddress moPanelBizPartnerBranchAddress;
    private erp.lib.table.STablePane moBizPartnerBranchAddressPane;
    private erp.lib.table.STablePane moBizPartnerBranchBankAccountPane;
    private erp.lib.table.STablePane moBizPartnerBranchContactPane;
    private erp.lib.table.STablePane moBizPartnerBranchNotePane;

    private boolean mbParamIsInMainWindow;
    private java.lang.String msParamBizPartnerDescription;
    private erp.mbps.form.SFormBizPartner moParamFormBizPartner;
    private boolean mbParamIsCompany;

    /** Creates new form SPanelBizPartnerBranch */
    public SPanelBizPartnerBranch(erp.client.SClientInterface client) {
        miClient = client;
        mnFormType = SDataConstants.BPSU_BPB;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel14 = new javax.swing.JPanel();
        jpBranch = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jlBizPartnerBranch = new javax.swing.JLabel();
        jtfBizPartnerBranch = new javax.swing.JTextField();
        jtfBizPartnerBranchId_Ro = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jlFkTaxRegionId_n = new javax.swing.JLabel();
        jcbFkTaxRegionId_n = new javax.swing.JComboBox();
        jPanel10 = new javax.swing.JPanel();
        jlFkAddressFormatTypeId_n = new javax.swing.JLabel();
        jcbFkAddressFormatTypeId_n = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jlTelephone01 = new javax.swing.JLabel();
        jtfTelAreaCode01 = new javax.swing.JTextField();
        jtfTelNumber01 = new javax.swing.JTextField();
        jtfTelExt01 = new javax.swing.JTextField();
        jcbFkTelephoneType01Id = new javax.swing.JComboBox();
        jPanel7 = new javax.swing.JPanel();
        jlTelephone02 = new javax.swing.JLabel();
        jtfTelAreaCode02 = new javax.swing.JTextField();
        jtfTelNumber02 = new javax.swing.JTextField();
        jtfTelExt02 = new javax.swing.JTextField();
        jcbFkTelephoneType02Id = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        jlTelephone03 = new javax.swing.JLabel();
        jtfTelAreaCode03 = new javax.swing.JTextField();
        jtfTelNumber03 = new javax.swing.JTextField();
        jtfTelExt03 = new javax.swing.JTextField();
        jcbFkTelephoneType03Id = new javax.swing.JComboBox();
        jPanel9 = new javax.swing.JPanel();
        jlEmail = new javax.swing.JLabel();
        jtfEmail = new javax.swing.JTextField();
        jlAddingMultipleMailHelp = new javax.swing.JLabel();
        jpBranchAddress = new javax.swing.JPanel();
        jpOficialAddress = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jckIsAddPrt = new javax.swing.JCheckBox();
        jckIsDeleted = new javax.swing.JCheckBox();
        jTabbedPane = new javax.swing.JTabbedPane();
        jpBranchAddressPane = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jbAddAddress = new javax.swing.JButton();
        jbModifyAddress = new javax.swing.JButton();
        jpBranchBankAccountPane = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jbAddBankAccount = new javax.swing.JButton();
        jbModifyBankAccount = new javax.swing.JButton();
        jpBranchContactPane = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jbAddContact = new javax.swing.JButton();
        jbModifyContact = new javax.swing.JButton();
        jpBranchNotesPane = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jbAddNote = new javax.swing.JButton();
        jbModifyNote = new javax.swing.JButton();
        jbDeleteNote = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(875, 220));
        setLayout(new java.awt.BorderLayout());

        jPanel14.setLayout(new java.awt.BorderLayout());

        jpBranch.setBorder(javax.swing.BorderFactory.createTitledBorder("Información de la sucursal:"));
        jpBranch.setLayout(new java.awt.GridLayout(8, 1, 0, 2));

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlBizPartnerBranch.setText("Nombre de sucursal: *");
        jlBizPartnerBranch.setPreferredSize(new java.awt.Dimension(110, 23));
        jPanel5.add(jlBizPartnerBranch);

        jtfBizPartnerBranch.setPreferredSize(new java.awt.Dimension(178, 23));
        jPanel5.add(jtfBizPartnerBranch);

        jtfBizPartnerBranchId_Ro.setEditable(false);
        jtfBizPartnerBranchId_Ro.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfBizPartnerBranchId_Ro.setToolTipText("ID del registro");
        jtfBizPartnerBranchId_Ro.setFocusable(false);
        jtfBizPartnerBranchId_Ro.setPreferredSize(new java.awt.Dimension(70, 23));
        jPanel5.add(jtfBizPartnerBranchId_Ro);

        jpBranch.add(jPanel5);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlFkTaxRegionId_n.setText("Región de impuestos:");
        jlFkTaxRegionId_n.setPreferredSize(new java.awt.Dimension(110, 23));
        jPanel12.add(jlFkTaxRegionId_n);

        jcbFkTaxRegionId_n.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkTaxRegionId_n.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel12.add(jcbFkTaxRegionId_n);

        jpBranch.add(jPanel12);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlFkAddressFormatTypeId_n.setText("Formato de domicilio:");
        jlFkAddressFormatTypeId_n.setPreferredSize(new java.awt.Dimension(110, 23));
        jPanel10.add(jlFkAddressFormatTypeId_n);

        jcbFkAddressFormatTypeId_n.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkAddressFormatTypeId_n.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel10.add(jcbFkAddressFormatTypeId_n);

        jpBranch.add(jPanel10);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlTelephone01.setText("Teléfono 01:");
        jlTelephone01.setPreferredSize(new java.awt.Dimension(110, 23));
        jPanel3.add(jlTelephone01);

        jtfTelAreaCode01.setPreferredSize(new java.awt.Dimension(40, 23));
        jPanel3.add(jtfTelAreaCode01);

        jtfTelNumber01.setPreferredSize(new java.awt.Dimension(94, 23));
        jPanel3.add(jtfTelNumber01);

        jtfTelExt01.setPreferredSize(new java.awt.Dimension(40, 23));
        jPanel3.add(jtfTelExt01);

        jcbFkTelephoneType01Id.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkTelephoneType01Id.setPreferredSize(new java.awt.Dimension(70, 23));
        jPanel3.add(jcbFkTelephoneType01Id);

        jpBranch.add(jPanel3);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlTelephone02.setText("Teléfono 02:");
        jlTelephone02.setPreferredSize(new java.awt.Dimension(110, 23));
        jPanel7.add(jlTelephone02);

        jtfTelAreaCode02.setPreferredSize(new java.awt.Dimension(40, 23));
        jPanel7.add(jtfTelAreaCode02);

        jtfTelNumber02.setPreferredSize(new java.awt.Dimension(94, 23));
        jPanel7.add(jtfTelNumber02);

        jtfTelExt02.setPreferredSize(new java.awt.Dimension(40, 23));
        jPanel7.add(jtfTelExt02);

        jcbFkTelephoneType02Id.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkTelephoneType02Id.setPreferredSize(new java.awt.Dimension(70, 23));
        jPanel7.add(jcbFkTelephoneType02Id);

        jpBranch.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlTelephone03.setText("Teléfono 03:");
        jlTelephone03.setPreferredSize(new java.awt.Dimension(110, 23));
        jPanel8.add(jlTelephone03);

        jtfTelAreaCode03.setPreferredSize(new java.awt.Dimension(40, 23));
        jPanel8.add(jtfTelAreaCode03);

        jtfTelNumber03.setPreferredSize(new java.awt.Dimension(94, 23));
        jPanel8.add(jtfTelNumber03);

        jtfTelExt03.setPreferredSize(new java.awt.Dimension(40, 23));
        jPanel8.add(jtfTelExt03);

        jcbFkTelephoneType03Id.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkTelephoneType03Id.setPreferredSize(new java.awt.Dimension(70, 23));
        jPanel8.add(jcbFkTelephoneType03Id);

        jpBranch.add(jPanel8);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlEmail.setForeground(new java.awt.Color(0, 102, 102));
        jlEmail.setText("Cuenta(s) correo-e:");
        jlEmail.setPreferredSize(new java.awt.Dimension(110, 23));
        jlEmail.setRequestFocusEnabled(false);
        jPanel9.add(jlEmail);

        jtfEmail.setPreferredSize(new java.awt.Dimension(225, 23));
        jPanel9.add(jtfEmail);

        jlAddingMultipleMailHelp.setForeground(new java.awt.Color(109, 109, 109));
        jlAddingMultipleMailHelp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlAddingMultipleMailHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_view_help.png"))); // NOI18N
        jlAddingMultipleMailHelp.setToolTipText("Separar varias cuentas con \";\", sin espacios, p. ej., \"cuenta1@mail.com;cuenta2@mail.com\"");
        jlAddingMultipleMailHelp.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel9.add(jlAddingMultipleMailHelp);

        jpBranch.add(jPanel9);

        jPanel14.add(jpBranch, java.awt.BorderLayout.WEST);

        jpBranchAddress.setBorder(javax.swing.BorderFactory.createTitledBorder("Información del domicilio:"));
        jpBranchAddress.setLayout(new java.awt.BorderLayout());

        jpOficialAddress.setLayout(new java.awt.BorderLayout());
        jpBranchAddress.add(jpOficialAddress, java.awt.BorderLayout.NORTH);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jckIsAddPrt.setText("Usar domicilio en impresión de documentos");
        jckIsAddPrt.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel13.add(jckIsAddPrt);

        jckIsDeleted.setForeground(new java.awt.Color(204, 0, 0));
        jckIsDeleted.setText("Registro eliminado");
        jckIsDeleted.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel13.add(jckIsDeleted);

        jpBranchAddress.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel14.add(jpBranchAddress, java.awt.BorderLayout.CENTER);

        add(jPanel14, java.awt.BorderLayout.NORTH);

        jpBranchAddressPane.setLayout(new java.awt.BorderLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 1, 0));

        jbAddAddress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_new.gif"))); // NOI18N
        jbAddAddress.setToolTipText("Crear [Ctrl+N]");
        jbAddAddress.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel2.add(jbAddAddress);

        jbModifyAddress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_edit.gif"))); // NOI18N
        jbModifyAddress.setToolTipText("Modificar [Ctrl+M]");
        jbModifyAddress.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel2.add(jbModifyAddress);

        jpBranchAddressPane.add(jPanel2, java.awt.BorderLayout.NORTH);

        jTabbedPane.addTab("Otros domicilios", jpBranchAddressPane);

        jpBranchBankAccountPane.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 1, 0));

        jbAddBankAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_new.gif"))); // NOI18N
        jbAddBankAccount.setToolTipText("Crear [Ctrl+N]");
        jbAddBankAccount.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel6.add(jbAddBankAccount);

        jbModifyBankAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_edit.gif"))); // NOI18N
        jbModifyBankAccount.setToolTipText("Modificar [Ctrl+M]");
        jbModifyBankAccount.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel6.add(jbModifyBankAccount);

        jpBranchBankAccountPane.add(jPanel6, java.awt.BorderLayout.NORTH);

        jTabbedPane.addTab("Cuentas bancarias", jpBranchBankAccountPane);

        jpBranchContactPane.setLayout(new java.awt.BorderLayout());

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 1, 0));

        jbAddContact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_new.gif"))); // NOI18N
        jbAddContact.setToolTipText("Crear [Ctrl+N]");
        jbAddContact.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel11.add(jbAddContact);

        jbModifyContact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_edit.gif"))); // NOI18N
        jbModifyContact.setToolTipText("Modificar [Ctrl+M]");
        jbModifyContact.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel11.add(jbModifyContact);

        jpBranchContactPane.add(jPanel11, java.awt.BorderLayout.NORTH);

        jTabbedPane.addTab("Contactos", jpBranchContactPane);

        jpBranchNotesPane.setLayout(new java.awt.BorderLayout());

        jPanel4.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 1, 0));

        jbAddNote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_new.gif"))); // NOI18N
        jbAddNote.setToolTipText("Crear [Ctrl+N]");
        jbAddNote.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel4.add(jbAddNote);

        jbModifyNote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_edit.gif"))); // NOI18N
        jbModifyNote.setToolTipText("Modificar [Ctrl+M]");
        jbModifyNote.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel4.add(jbModifyNote);

        jbDeleteNote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_delete.gif"))); // NOI18N
        jbDeleteNote.setToolTipText("Eliminar [Ctrl+D]");
        jbDeleteNote.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel4.add(jbDeleteNote);

        jpBranchNotesPane.add(jPanel4, java.awt.BorderLayout.NORTH);

        jTabbedPane.addTab("Notas", jpBranchNotesPane);

        add(jTabbedPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void initComponentsExtra() {
        int i;
        erp.lib.table.STableColumnForm tableColumnsBizPartnerBranchAddress[];
        erp.lib.table.STableColumnForm tableColumnsBizPartnerBranchBankAccount[];
        erp.lib.table.STableColumnForm tableColumnsBizPartnerBranchContact[];
        erp.lib.table.STableColumnForm tableColumnsBizPartnerBranchNote[];

        mvFields = new Vector<>();

        moPanelBizPartnerBranchAddress = new SPanelBizPartnerBranchAddress(miClient);
        jpOficialAddress.add(moPanelBizPartnerBranchAddress, BorderLayout.CENTER);

        moBizPartnerBranchAddressPane = new STablePane(miClient);
        moBizPartnerBranchAddressPane.setDoubleClickAction(this, "publicActionModify");
        jpBranchAddressPane.add(moBizPartnerBranchAddressPane, BorderLayout.CENTER);

        moBizPartnerBranchBankAccountPane = new STablePane(miClient);
        moBizPartnerBranchBankAccountPane.setDoubleClickAction(this, "publicActionModify");
        jpBranchBankAccountPane.add(moBizPartnerBranchBankAccountPane, BorderLayout.CENTER);

        moBizPartnerBranchContactPane = new STablePane(miClient);
        moBizPartnerBranchContactPane.setDoubleClickAction(this, "publicActionModify");
        jpBranchContactPane.add(moBizPartnerBranchContactPane, BorderLayout.CENTER);

        moBizPartnerBranchNotePane = new STablePane(miClient);
        moBizPartnerBranchNotePane.setDoubleClickAction(this, "publicActionModify");
        jpBranchNotesPane.add(moBizPartnerBranchNotePane, BorderLayout.CENTER);

        moFieldBizPartnerBranch = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfBizPartnerBranch, jlBizPartnerBranch);
        moFieldBizPartnerBranch.setLengthMax(50);
        moFieldFkTaxRegionId_n = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_KEY, false, jcbFkTaxRegionId_n, jlFkTaxRegionId_n);
        moFieldFkAddressFormatTypeId_n = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_KEY, false, jcbFkAddressFormatTypeId_n, jlFkAddressFormatTypeId_n);
        moFieldTelAreaCode01 = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfTelAreaCode01, jlTelephone01);
        moFieldTelAreaCode01.setLengthMax(10);
        moFieldTelNumber01 = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfTelNumber01, jlTelephone01);
        moFieldTelNumber01.setLengthMax(15);
        moFieldTelExt01 = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfTelExt01, jlTelephone01);
        moFieldTelExt01.setLengthMax(15);
        moFieldFkTelephoneType01Id = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, false, jcbFkTelephoneType01Id, jlTelephone01);
        moFieldTelAreaCode02 = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfTelAreaCode02, jlTelephone02);
        moFieldTelAreaCode02.setLengthMax(10);
        moFieldTelNumber02 = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfTelNumber02, jlTelephone02);
        moFieldTelNumber02.setLengthMax(15);
        moFieldTelExt02 = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfTelExt02, jlTelephone02);
        moFieldTelExt02.setLengthMax(15);
        moFieldFkTelephoneType02Id = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, false, jcbFkTelephoneType02Id, jlTelephone02);
        moFieldTelAreaCode03 = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfTelAreaCode03, jlTelephone03);
        moFieldTelAreaCode03.setLengthMax(10);
        moFieldTelNumber03 = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfTelNumber03, jlTelephone03);
        moFieldTelNumber03.setLengthMax(15);
        moFieldTelExt03 = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfTelExt03, jlTelephone03);
        moFieldTelExt03.setLengthMax(15);
        moFieldFkTelephoneType03Id = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, false, jcbFkTelephoneType03Id, jlTelephone03);
        moFieldEmail = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfEmail, jlEmail);
        moFieldEmail.setLengthMax(255);
        moFieldEmail.setAutoCaseType(SLibConstants.UNDEFINED);
        moFieldIsAddressPrintable = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsAddPrt);
        moFieldIsDeleted = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsDeleted);

        mvFields.add(moFieldBizPartnerBranch);
        mvFields.add(moFieldFkTaxRegionId_n);
        mvFields.add(moFieldFkAddressFormatTypeId_n);
        mvFields.add(moFieldTelAreaCode01);
        mvFields.add(moFieldTelNumber01);
        mvFields.add(moFieldTelExt01);
        mvFields.add(moFieldFkTelephoneType01Id);
        mvFields.add(moFieldTelAreaCode02);
        mvFields.add(moFieldTelNumber02);
        mvFields.add(moFieldTelExt02);
        mvFields.add(moFieldFkTelephoneType02Id);
        mvFields.add(moFieldTelAreaCode03);
        mvFields.add(moFieldTelNumber03);
        mvFields.add(moFieldTelExt03);
        mvFields.add(moFieldFkTelephoneType03Id);
        mvFields.add(moFieldEmail);
        mvFields.add(moFieldIsDeleted);

        moFormBizPartnerBranchAddress = new SFormBizPartnerBranchAddress(miClient);
        moFormBizPartnerBranchBankAccount = new SFormBizPartnerBranchBankAccount(miClient);
        moFormBizPartnerBranchContact = new SFormBizPartnerBranchContact(miClient);
        moFormBizPartnerBranchNote = new SFormBizPartnerBranchNote(miClient);

        jbAddAddress.addActionListener(this);
        jbModifyAddress.addActionListener(this);
        jbAddBankAccount.addActionListener(this);
        jbModifyBankAccount.addActionListener(this);
        jbAddContact.addActionListener(this);
        jbModifyContact.addActionListener(this);
        jbAddNote.addActionListener(this);
        jbModifyNote.addActionListener(this);
        jbDeleteNote.addActionListener(this);

        i = 0;
        tableColumnsBizPartnerBranchAddress = new STableColumnForm[16];
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Domicilio", 100);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Calle", 150);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Número ext.", 50);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Número int.", 50);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Colonia", 150);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Referencia", 150);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "CP", 50);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "AP", 50);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_BOOLEAN, "Predeterminado", STableConstants.WIDTH_BOOLEAN);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_BOOLEAN, "Eliminado", STableConstants.WIDTH_BOOLEAN);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. creación", STableConstants.WIDTH_USER);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Creación", STableConstants.WIDTH_DATE_TIME);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. modificación", STableConstants.WIDTH_USER);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Modificación", STableConstants.WIDTH_DATE_TIME);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. eliminación", STableConstants.WIDTH_USER);
        tableColumnsBizPartnerBranchAddress[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Eliminación", STableConstants.WIDTH_DATE_TIME);

        for (i = 0; i < tableColumnsBizPartnerBranchAddress.length; i++) {
            moBizPartnerBranchAddressPane.addTableColumn(tableColumnsBizPartnerBranchAddress[i]);
        }

        i = 0;
        tableColumnsBizPartnerBranchBankAccount = new STableColumnForm[20];
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Tipo cuenta efectivo", 100);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Nombre cuenta", 100);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Banco", 100);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Moneda", STableConstants.WIDTH_CURRENCY_KEY);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "No. sucursal", 100);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "No. cuenta", 100);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "ClaBE", 100);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Código", 75);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Referencia", 75);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "ABA", 75);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "SWIFT", 75);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_BOOLEAN, "Aplica tarjeta", STableConstants.WIDTH_BOOLEAN);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Emisor tarjeta", 150);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_BOOLEAN, "Eliminado", STableConstants.WIDTH_BOOLEAN);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. creación", STableConstants.WIDTH_USER);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Creación", STableConstants.WIDTH_DATE_TIME);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. modificación", STableConstants.WIDTH_USER);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Modificación", STableConstants.WIDTH_DATE_TIME);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. eliminación", STableConstants.WIDTH_USER);
        tableColumnsBizPartnerBranchBankAccount[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Eliminación", STableConstants.WIDTH_DATE_TIME);

        for (i = 0; i < tableColumnsBizPartnerBranchBankAccount.length; i++) {
            moBizPartnerBranchBankAccountPane.addTableColumn(tableColumnsBizPartnerBranchBankAccount[i]);
        }

        i = 0;
        tableColumnsBizPartnerBranchContact = new STableColumnForm[22];
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Tipo contacto", 100);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Puesto", 150);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Contacto", 175);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Teléfono 01", 100);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Tipo teléfono 01", 75);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Teléfono 02", 100);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Tipo teléfono 02", 75);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Teléfono 03", 100);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Tipo teléfono 03", 75);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Nextel 01", 100);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Nextel 02", 100);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Cuenta correo-e 01", 100);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Cuenta correo-e 02", 100);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Skype 01", 100);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Skype 02", 100);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_BOOLEAN, "Eliminado", STableConstants.WIDTH_BOOLEAN);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. creación", STableConstants.WIDTH_USER);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Creación", STableConstants.WIDTH_DATE_TIME);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. modificación", STableConstants.WIDTH_USER);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Modificación", STableConstants.WIDTH_DATE_TIME);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. eliminación", STableConstants.WIDTH_USER);
        tableColumnsBizPartnerBranchContact[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Eliminación", STableConstants.WIDTH_DATE_TIME);

        for (i = 0; i < tableColumnsBizPartnerBranchContact.length; i++) {
            moBizPartnerBranchContactPane.addTableColumn(tableColumnsBizPartnerBranchContact[i]);
        }

        i = 0;
        tableColumnsBizPartnerBranchNote = new STableColumnForm[1];
        tableColumnsBizPartnerBranchNote[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Notas", 600);

        for (i = 0; i < tableColumnsBizPartnerBranchNote.length; i++) {
            moBizPartnerBranchNotePane.addTableColumn(tableColumnsBizPartnerBranchNote[i]);
        }

        SFormUtilities.createActionMap(this, this, "publicActionAdd", "add", KeyEvent.VK_N, KeyEvent.CTRL_DOWN_MASK);
        SFormUtilities.createActionMap(this, this, "publicActionModify", "modify", KeyEvent.VK_M, KeyEvent.CTRL_DOWN_MASK);
        SFormUtilities.createActionMap(this, this, "publicActionModify", "delete", KeyEvent.VK_D, KeyEvent.CTRL_DOWN_MASK);
    }

    private void renderBranch() {
        if (mbParamIsInMainWindow) {
            jtfBizPartnerBranch.setEnabled(false);

            if (moBizPartnerBranch == null) {
                jtfBizPartnerBranch.setText(SModSysConsts.TXT_HQ);
                jckIsAddPrt.setEnabled(false);
                jckIsAddPrt.setSelected(true);
            }
        }
        else {
            jtfBizPartnerBranch.setEnabled(true);
        }
        
        jtfBizPartnerBranchId_Ro.setText(moBizPartnerBranch == null ? "" : "" + moBizPartnerBranch.getPkBizPartnerBranchId());
    }

    private void renderBankAccount() {
        if (mbParamIsCompany) {
            jbAddBankAccount.setEnabled(false);
            jbModifyBankAccount.setEnabled(false);
        }
        else {
            jbAddBankAccount.setEnabled(true);
            jbModifyBankAccount.setEnabled(true);
        }
    }

    private void actionAddAddress() {
        SDataBizPartnerBranchAddress dataBizPartnerBranchAddress = null;

        if (jbAddAddress.isEnabled()) {
            moFormBizPartnerBranchAddress.formRefreshCatalogues();
            moFormBizPartnerBranchAddress.formReset();
            moFormBizPartnerBranchAddress.setVisible(true);

            if (moFormBizPartnerBranchAddress.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
                dataBizPartnerBranchAddress = (SDataBizPartnerBranchAddress) moFormBizPartnerBranchAddress.getRegistry();
                dataBizPartnerBranchAddress.setFkUserNewId(miClient.getSessionXXX().getUser().getPkUserId());
                dataBizPartnerBranchAddress.setFkUserEditId(SUtilConsts.USR_NA_ID);
                dataBizPartnerBranchAddress.setFkUserDeleteId(SUtilConsts.USR_NA_ID);
                dataBizPartnerBranchAddress.setDbmsUserNew(miClient.getSessionXXX().getUser().getUser());
                dataBizPartnerBranchAddress.setDbmsUserEdit("");
                dataBizPartnerBranchAddress.setDbmsUserDelete("");
                dataBizPartnerBranchAddress.setUserNewTs(new Date());
                dataBizPartnerBranchAddress.setUserEditTs(null);
                dataBizPartnerBranchAddress.setUserDeleteTs(null);

                moBizPartnerBranchAddressPane.addTableRow(new SDataBizPartnerBranchAddressRow(dataBizPartnerBranchAddress));
                moBizPartnerBranchAddressPane.renderTableRows();
                moBizPartnerBranchAddressPane.setTableRowSelection(moBizPartnerBranchAddressPane.getTableGuiRowCount() - 1);
            }
        }
    }

    private void actionModifyAddress() {
        int index = moBizPartnerBranchAddressPane.getTable().getSelectedRow();
        SDataBizPartnerBranchAddress dataBizPartnerBranchAddress = null;

        if (jbModifyAddress.isEnabled()) {
            if (index != -1) {
                moFormBizPartnerBranchAddress.formRefreshCatalogues();
                moFormBizPartnerBranchAddress.formReset();
                moFormBizPartnerBranchAddress.setRegistry((SDataBizPartnerBranchAddress) moBizPartnerBranchAddressPane.getTableRow(index).getData());
                moFormBizPartnerBranchAddress.setVisible(true);

                if (moFormBizPartnerBranchAddress.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
                    dataBizPartnerBranchAddress = (SDataBizPartnerBranchAddress) moFormBizPartnerBranchAddress.getRegistry();
                    dataBizPartnerBranchAddress.setFkUserEditId(miClient.getSessionXXX().getUser().getPkUserId());
                    dataBizPartnerBranchAddress.setDbmsUserEdit(miClient.getSessionXXX().getUser().getUser());
                    dataBizPartnerBranchAddress.setUserEditTs(new Date());

                    moBizPartnerBranchAddressPane.getTableModel().getTableRows().set(index, new SDataBizPartnerBranchAddressRow(dataBizPartnerBranchAddress));
                    moBizPartnerBranchAddressPane.renderTableRows();
                    moBizPartnerBranchAddressPane.setTableRowSelection(index);
                }
            }
        }
    }

    private void actionAddBankAccount() {
        SDataBizPartnerBranchBankAccount dataBizPartnerBranchBankAccount = null;

        if (jbAddBankAccount.isEnabled()) {
            moFormBizPartnerBranchBankAccount.setParamIsInMainWindow(true);
            moFormBizPartnerBranchBankAccount.setParamBizPartnerDescription(moParamFormBizPartner == null ? msParamBizPartnerDescription :
                (String) moParamFormBizPartner.getValue(SDataConstantsSys.VALUE_BIZ_PARTNER));
            moFormBizPartnerBranchBankAccount.setParamBizPartnerBranchDescription(jtfBizPartnerBranch.getText());
            moFormBizPartnerBranchBankAccount.formRefreshCatalogues();
            moFormBizPartnerBranchBankAccount.formReset();
            moFormBizPartnerBranchBankAccount.setValue(SDataConstants.CFGU_CO, mbParamIsCompany);
            moFormBizPartnerBranchBankAccount.setVisible(true);

            if (moFormBizPartnerBranchBankAccount.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
                dataBizPartnerBranchBankAccount = (SDataBizPartnerBranchBankAccount) moFormBizPartnerBranchBankAccount.getRegistry();
                dataBizPartnerBranchBankAccount.setFkUserNewId(miClient.getSessionXXX().getUser().getPkUserId());
                dataBizPartnerBranchBankAccount.setFkUserEditId(SUtilConsts.USR_NA_ID);
                dataBizPartnerBranchBankAccount.setFkUserDeleteId(SUtilConsts.USR_NA_ID);
                dataBizPartnerBranchBankAccount.setDbmsUserNew(miClient.getSessionXXX().getUser().getUser());
                dataBizPartnerBranchBankAccount.setDbmsUserEdit("");
                dataBizPartnerBranchBankAccount.setDbmsUserDelete("");
                dataBizPartnerBranchBankAccount.setUserNewTs(new Date());
                dataBizPartnerBranchBankAccount.setUserEditTs(null);
                dataBizPartnerBranchBankAccount.setUserDeleteTs(null);

                moBizPartnerBranchBankAccountPane.addTableRow(new SDataBizPartnerBranchBankAccountRow(dataBizPartnerBranchBankAccount));
                moBizPartnerBranchBankAccountPane.renderTableRows();
                moBizPartnerBranchBankAccountPane.setTableRowSelection(moBizPartnerBranchBankAccountPane.getTableGuiRowCount() - 1);
            }
        }
    }

    private void actionModifyBankAccount() {
        int index = moBizPartnerBranchBankAccountPane.getTable().getSelectedRow();
        SDataBizPartnerBranchBankAccount dataBizPartnerBranchBankAccount = null;

        if (jbModifyBankAccount.isEnabled()) {
            if (index != -1) {
                moFormBizPartnerBranchBankAccount.setParamIsInMainWindow(true);
                moFormBizPartnerBranchBankAccount.setParamBizPartnerDescription(moParamFormBizPartner == null ? msParamBizPartnerDescription :
                    (String) moParamFormBizPartner.getValue(SDataConstantsSys.VALUE_BIZ_PARTNER));
                moFormBizPartnerBranchBankAccount.setParamBizPartnerBranchDescription(jtfBizPartnerBranch.getText());
                moFormBizPartnerBranchBankAccount.formRefreshCatalogues();
                moFormBizPartnerBranchBankAccount.formReset();
                moFormBizPartnerBranchBankAccount.setValue(SDataConstants.CFGU_CO, mbParamIsCompany);
                moFormBizPartnerBranchBankAccount.setRegistry((SDataBizPartnerBranchBankAccount) moBizPartnerBranchBankAccountPane.getTableRow(index).getData());
                moFormBizPartnerBranchBankAccount.setVisible(true);

                if (moFormBizPartnerBranchBankAccount.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
                    dataBizPartnerBranchBankAccount = (SDataBizPartnerBranchBankAccount) moFormBizPartnerBranchBankAccount.getRegistry();
                    dataBizPartnerBranchBankAccount.setFkUserEditId(miClient.getSessionXXX().getUser().getPkUserId());
                    dataBizPartnerBranchBankAccount.setDbmsUserEdit(miClient.getSessionXXX().getUser().getUser());
                    dataBizPartnerBranchBankAccount.setUserEditTs(new Date());

                    moBizPartnerBranchBankAccountPane.getTableModel().getTableRows().set(index, new SDataBizPartnerBranchBankAccountRow(dataBizPartnerBranchBankAccount));
                    moBizPartnerBranchBankAccountPane.renderTableRows();
                    moBizPartnerBranchBankAccountPane.setTableRowSelection(index);
                }
            }
        }
    }

    private void actionAddContact() {
        SDataBizPartnerBranchContact dataBizPartnerBranchContact = null;

        if (jbAddContact.isEnabled()) {
            moFormBizPartnerBranchContact.setParamIsInMainWindow(true);
            moFormBizPartnerBranchContact.setParamBizPartnerDescription(moParamFormBizPartner == null ? msParamBizPartnerDescription :
                (String) moParamFormBizPartner.getValue(SDataConstantsSys.VALUE_BIZ_PARTNER));
            moFormBizPartnerBranchContact.setParamBizPartnerBranchDescription(jtfBizPartnerBranch.getText());
            moFormBizPartnerBranchContact.formRefreshCatalogues();
            moFormBizPartnerBranchContact.formReset();
            moFormBizPartnerBranchContact.setVisible(true);

            if (moFormBizPartnerBranchContact.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
                dataBizPartnerBranchContact = (SDataBizPartnerBranchContact) moFormBizPartnerBranchContact.getRegistry();
                dataBizPartnerBranchContact.setFkUserNewId(miClient.getSessionXXX().getUser().getPkUserId());
                dataBizPartnerBranchContact.setFkUserEditId(SUtilConsts.USR_NA_ID);
                dataBizPartnerBranchContact.setFkUserDeleteId(SUtilConsts.USR_NA_ID);
                dataBizPartnerBranchContact.setDbmsUserNew(miClient.getSessionXXX().getUser().getUser());
                dataBizPartnerBranchContact.setDbmsUserEdit("");
                dataBizPartnerBranchContact.setDbmsUserDelete("");
                dataBizPartnerBranchContact.setUserNewTs(new Date());
                dataBizPartnerBranchContact.setUserEditTs(null);
                dataBizPartnerBranchContact.setUserDeleteTs(null);

                moBizPartnerBranchContactPane.addTableRow(new SDataBizPartnerBranchContactRow(dataBizPartnerBranchContact));
                moBizPartnerBranchContactPane.renderTableRows();
                moBizPartnerBranchContactPane.setTableRowSelection(moBizPartnerBranchContactPane.getTableGuiRowCount() - 1);
            }
        }
    }

    private void actionModifyContact() {
        int index = moBizPartnerBranchContactPane.getTable().getSelectedRow();
        SDataBizPartnerBranchContact dataBizPartnerBranchContact = null;

        if (jbModifyContact.isEnabled()) {
            if (index != -1) {
                moFormBizPartnerBranchContact.setParamIsInMainWindow(true);
                moFormBizPartnerBranchContact.setParamBizPartnerDescription(moParamFormBizPartner == null ? msParamBizPartnerDescription :
                    (String) moParamFormBizPartner.getValue(SDataConstantsSys.VALUE_BIZ_PARTNER));
                moFormBizPartnerBranchContact.setParamBizPartnerBranchDescription(jtfBizPartnerBranch.getText());
                moFormBizPartnerBranchContact.formRefreshCatalogues();
                moFormBizPartnerBranchContact.formReset();
                moFormBizPartnerBranchContact.setRegistry((SDataBizPartnerBranchContact) moBizPartnerBranchContactPane.getTableRow(index).getData());
                moFormBizPartnerBranchContact.setVisible(true);

                if (moFormBizPartnerBranchContact.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
                    dataBizPartnerBranchContact = (SDataBizPartnerBranchContact) moFormBizPartnerBranchContact.getRegistry();
                    dataBizPartnerBranchContact.setFkUserEditId(miClient.getSessionXXX().getUser().getPkUserId());
                    dataBizPartnerBranchContact.setDbmsUserEdit(miClient.getSessionXXX().getUser().getUser());
                    dataBizPartnerBranchContact.setUserEditTs(new Date());

                    moBizPartnerBranchContactPane.getTableModel().getTableRows().set(index, new SDataBizPartnerBranchContactRow(dataBizPartnerBranchContact));
                    moBizPartnerBranchContactPane.renderTableRows();
                    moBizPartnerBranchContactPane.setTableRowSelection(index);
                }
            }
        }
    }

    private void actionAddNote() {
        if (jbAddNote.isEnabled()) {
            moFormBizPartnerBranchNote.formReset();
            moFormBizPartnerBranchNote.setVisible(true);

            if (moFormBizPartnerBranchNote.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
                moBizPartnerBranchNotePane.addTableRow(new SDataBizPartnerBranchNoteRow(moFormBizPartnerBranchNote.getRegistry()));
                moBizPartnerBranchNotePane.renderTableRows();
                moBizPartnerBranchNotePane.setTableRowSelection(moBizPartnerBranchNotePane.getTableGuiRowCount() - 1);
            }
        }
    }

    private void actionModifyNote() {
        int index = moBizPartnerBranchNotePane.getTable().getSelectedRow();

        if (jbModifyNote.isEnabled()) {
            if (index != -1) {
                moFormBizPartnerBranchNote.formReset();
                moFormBizPartnerBranchNote.setRegistry((SDataBizPartnerBranchNote) moBizPartnerBranchNotePane.getTableRow(index).getData());
                moFormBizPartnerBranchNote.setVisible(true);

                if (moFormBizPartnerBranchNote.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
                    moBizPartnerBranchNotePane.getTableModel().getTableRows().set(index, new SDataBizPartnerBranchNoteRow(moFormBizPartnerBranchNote.getRegistry()));
                    moBizPartnerBranchNotePane.renderTableRows();
                    moBizPartnerBranchNotePane.setTableRowSelection(index);
                }
            }
        }
    }

    private void actionDeleteNote() {
        int index = moBizPartnerBranchNotePane.getTable().getSelectedRow();

        if (jbDeleteNote.isEnabled()) {
            if (index != -1) {
                if (miClient.showMsgBoxConfirm(SLibConstants.MSG_CNF_REG_DELETE) == JOptionPane.YES_OPTION) {
                    moBizPartnerBranchNotePane.removeTableRow(index);
                    moBizPartnerBranchNotePane.renderTableRows();

                    if (moBizPartnerBranchNotePane.getTableGuiRowCount() > 0) {
                        moBizPartnerBranchNotePane.setTableRowSelection(index < moBizPartnerBranchNotePane.getTableGuiRowCount() ? index : moBizPartnerBranchNotePane.getTableGuiRowCount() - 1);
                    }
                }
            }
        }
    }

    public void publicActionAdd() {
        if (jTabbedPane.getSelectedIndex() == 0 && jbAddAddress.isEnabled()) {
            actionAddAddress();
        }
        else if (jTabbedPane.getSelectedIndex() == 1 && jbAddBankAccount.isEnabled()) {
            actionAddBankAccount();
        }
        else if (jTabbedPane.getSelectedIndex() == 2 && jbAddContact.isEnabled()) {
            actionAddContact();
        }
        else if (jTabbedPane.getSelectedIndex() == 3 && jbAddNote.isEnabled()) {
            actionAddNote();
        }
    }

    public void publicActionModify() {
        if (jTabbedPane.getSelectedIndex() == 0 && jbModifyAddress.isEnabled()) {
            actionModifyAddress();
        }
        else if (jTabbedPane.getSelectedIndex() == 1 && jbModifyBankAccount.isEnabled()) {
            actionModifyBankAccount();
        }
        else if (jTabbedPane.getSelectedIndex() == 2 && jbModifyContact.isEnabled()) {
            actionModifyContact();
        }
        else if (jTabbedPane.getSelectedIndex() == 3 && jbModifyNote.isEnabled()) {
            actionModifyNote();
        }
    }

    public void publicActionDelete() {
        if (jTabbedPane.getSelectedIndex() == 1 && jbDeleteNote.isEnabled()) {
            actionDeleteNote();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JButton jbAddAddress;
    private javax.swing.JButton jbAddBankAccount;
    private javax.swing.JButton jbAddContact;
    private javax.swing.JButton jbAddNote;
    private javax.swing.JButton jbDeleteNote;
    private javax.swing.JButton jbModifyAddress;
    private javax.swing.JButton jbModifyBankAccount;
    private javax.swing.JButton jbModifyContact;
    private javax.swing.JButton jbModifyNote;
    private javax.swing.JComboBox jcbFkAddressFormatTypeId_n;
    private javax.swing.JComboBox jcbFkTaxRegionId_n;
    private javax.swing.JComboBox jcbFkTelephoneType01Id;
    private javax.swing.JComboBox jcbFkTelephoneType02Id;
    private javax.swing.JComboBox jcbFkTelephoneType03Id;
    private javax.swing.JCheckBox jckIsAddPrt;
    private javax.swing.JCheckBox jckIsDeleted;
    private javax.swing.JLabel jlAddingMultipleMailHelp;
    private javax.swing.JLabel jlBizPartnerBranch;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JLabel jlFkAddressFormatTypeId_n;
    private javax.swing.JLabel jlFkTaxRegionId_n;
    private javax.swing.JLabel jlTelephone01;
    private javax.swing.JLabel jlTelephone02;
    private javax.swing.JLabel jlTelephone03;
    private javax.swing.JPanel jpBranch;
    private javax.swing.JPanel jpBranchAddress;
    private javax.swing.JPanel jpBranchAddressPane;
    private javax.swing.JPanel jpBranchBankAccountPane;
    private javax.swing.JPanel jpBranchContactPane;
    private javax.swing.JPanel jpBranchNotesPane;
    private javax.swing.JPanel jpOficialAddress;
    private javax.swing.JTextField jtfBizPartnerBranch;
    private javax.swing.JTextField jtfBizPartnerBranchId_Ro;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfTelAreaCode01;
    private javax.swing.JTextField jtfTelAreaCode02;
    private javax.swing.JTextField jtfTelAreaCode03;
    private javax.swing.JTextField jtfTelExt01;
    private javax.swing.JTextField jtfTelExt02;
    private javax.swing.JTextField jtfTelExt03;
    private javax.swing.JTextField jtfTelNumber01;
    private javax.swing.JTextField jtfTelNumber02;
    private javax.swing.JTextField jtfTelNumber03;
    // End of variables declaration//GEN-END:variables
  
    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moBizPartnerBranch = null;
        moBizPartnerBranchAddress = null;
        moBizPartnerBranchContact = null;
        mbParamIsInMainWindow = false;
        mbParamIsCompany = false;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        moPanelBizPartnerBranchAddress.formReset();
        moPanelBizPartnerBranchAddress.setParamIsInMainWindow(true);
        moBizPartnerBranchAddressPane.createTable(null);
        moBizPartnerBranchAddressPane.clearTableRows();
        moBizPartnerBranchBankAccountPane.createTable(null);
        moBizPartnerBranchBankAccountPane.clearTableRows();
        moBizPartnerBranchContactPane.createTable(null);
        moBizPartnerBranchContactPane.clearTableRows();
        moBizPartnerBranchNotePane.createTable(null);
        moBizPartnerBranchNotePane.clearTableRows();

        moFieldIsAddressPrintable.setFieldValue(true);
        moFieldFkTelephoneType01Id.setKey(new int[] { SDataConstantsSys.BPSS_TP_TEL_NA });
        moFieldFkTelephoneType02Id.setKey(new int[] { SDataConstantsSys.BPSS_TP_TEL_NA });
        moFieldFkTelephoneType03Id.setKey(new int[] { SDataConstantsSys.BPSS_TP_TEL_NA });

        jckIsDeleted.setEnabled(false);
        jTabbedPane.setSelectedIndex(0);

        renderBranch();
    }

    @Override
    @SuppressWarnings("unchecked")
    public void formRefreshCatalogues() {
        moPanelBizPartnerBranchAddress.formRefreshCatalogues();
        SFormUtilities.populateComboBox(miClient, jcbFkTaxRegionId_n, SDataConstants.FINU_TAX_REG);
        SFormUtilities.populateComboBox(miClient, jcbFkAddressFormatTypeId_n, SDataConstants.BPSS_TP_ADD_FMT);
        SFormUtilities.populateComboBox(miClient, jcbFkTelephoneType01Id, SDataConstants.BPSS_TP_TEL);
        SFormUtilities.populateComboBox(miClient, jcbFkTelephoneType02Id, SDataConstants.BPSS_TP_TEL);
        SFormUtilities.populateComboBox(miClient, jcbFkTelephoneType03Id, SDataConstants.BPSS_TP_TEL);
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        int count = 0;
        ArrayList<String> email = new ArrayList<>();
        SFormValidation validation = new SFormValidation();
        SDataBizPartnerBranchAddress address = null;

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        if (!validation.getIsError()) {
            if (moFieldFkTelephoneType01Id.getKeyAsIntArray()[0] > SDataConstantsSys.BPSS_TP_TEL_NA && jtfTelNumber01.getText().length() == 0) {
                validation.setComponent(jtfTelNumber01);
                validation.setMessage("Se debe ingresar un valor para el campo '" + jlTelephone01.getText() + "'.");
            }
            else if (moFieldFkTelephoneType02Id.getKeyAsIntArray()[0] > SDataConstantsSys.BPSS_TP_TEL_NA && jtfTelNumber02.getText().length() == 0) {
                validation.setComponent(jtfTelNumber02);
                validation.setMessage("Se debe ingresar un valor para el campo '" + jlTelephone02.getText() + "'.");
            }
            else if (moFieldFkTelephoneType03Id.getKeyAsIntArray()[0] > SDataConstantsSys.BPSS_TP_TEL_NA && jtfTelNumber03.getText().length() == 0) {
                validation.setComponent(jtfTelNumber03);
                validation.setMessage("Se debe ingresar un valor para el campo '" + jlTelephone03.getText() + "'.");
            }
            else if (moFieldFkTelephoneType01Id.getKeyAsIntArray()[0] > SDataConstantsSys.BPSS_TP_TEL_NA && jtfTelNumber01.getText().length() == 0 &&
                    (jtfTelAreaCode01.getText().length() > 0 || jtfTelExt01.getText().length() > 0)) {
                validation.setComponent(jtfTelNumber01);
                validation.setMessage("Se debe ingresar un valor para el campo '" + jlTelephone01.getText() + "'.");
            }
            else if (moFieldFkTelephoneType02Id.getKeyAsIntArray()[0] > SDataConstantsSys.BPSS_TP_TEL_NA && jtfTelNumber02.getText().length() == 0 &&
                    (jtfTelAreaCode02.getText().length() > 0 || jtfTelExt02.getText().length() > 0)) {
                validation.setComponent(jtfTelNumber02);
                validation.setMessage("Se debe ingresar un valor para el campo '" + jlTelephone02.getText() + "'.");
            }
            else if (moFieldFkTelephoneType03Id.getKeyAsIntArray()[0] > SDataConstantsSys.BPSS_TP_TEL_NA && jtfTelNumber03.getText().length() == 0 &&
                    (jtfTelAreaCode03.getText().length() > 0 || jtfTelExt03.getText().length() > 0)) {
                validation.setComponent(jtfTelNumber03);
                validation.setMessage("Se debe ingresar un valor para el campo '" + jlTelephone03.getText() + "'.");
            }
            else if ((jtfTelAreaCode01.getText().length() > 0 || jtfTelNumber01.getText().length() > 0 || jtfTelExt01.getText().length() > 0) &&
                    moFieldFkTelephoneType01Id.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_TEL_NA) {
                validation.setComponent(jcbFkTelephoneType01Id);
                validation.setMessage("Se debe seleccionar un tipo de teléfono para el campo '" + jlTelephone01.getText() + "'.");
            }
            else if ((jtfTelAreaCode02.getText().length() > 0 || jtfTelNumber02.getText().length() > 0 || jtfTelExt02.getText().length() > 0) &&
                    moFieldFkTelephoneType02Id.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_TEL_NA) {
                validation.setComponent(jcbFkTelephoneType02Id);
                validation.setMessage("Se debe seleccionar un tipo de teléfono para el campo '" + jlTelephone02.getText() + "'.");
            }
            else if ((jtfTelAreaCode03.getText().length() > 0 || jtfTelNumber03.getText().length() > 0 || jtfTelExt03.getText().length() > 0) &&
                    moFieldFkTelephoneType03Id.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_TEL_NA) {
                validation.setComponent(jcbFkTelephoneType03Id);
                validation.setMessage("Se debe seleccionar un tipo de teléfono para el campo '" + jlTelephone03.getText() + "'.");
            }
        }

        if (!validation.getIsError()) {
            validation = moPanelBizPartnerBranchAddress.formValidate();

            if (!validation.getIsError()) {
                // Validate that there is only one default address:

                address = (SDataBizPartnerBranchAddress) moPanelBizPartnerBranchAddress.getRegistry();
                if (address.getIsDefault()) {
                    count++;
                }

                for (int i = 0; i < moBizPartnerBranchAddressPane.getTableGuiRowCount(); i++) {
                    address = (SDataBizPartnerBranchAddress) moBizPartnerBranchAddressPane.getTableRow(i).getData();
                    if (address.getIsDefault()) {
                        count++;
                    }
                }

                if (count == 0) {
                    jTabbedPane.setSelectedIndex(0);
                    validation.setMessage("No se ha definido el domicilio predeterminado para la sucursal.");
                }
                else if (count > 1) {
                    jTabbedPane.setSelectedIndex(0);
                    validation.setMessage("Solamente se debe definir un domicilio predeterminado para la sucursal.");
                }
            }
        }

        email.addAll(Arrays.asList(SLibUtils.textExplode(moFieldEmail.getString(), ";")));
        for(String field:email) {
            if (!validation.getIsError() && field.length() > 0) {
                field = SLibUtilities.validateEmail(field);
                if (field.length() > 0) {
                    validation.setComponent(jtfEmail);
                    validation.setMessage(field);
                }
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        moBizPartnerBranch = (SDataBizPartnerBranch) registry;

        moFieldBizPartnerBranch.setFieldValue(moBizPartnerBranch.getBizPartnerBranch());
        moFieldFkTaxRegionId_n.setFieldValue(new int[] { moBizPartnerBranch.getFkTaxRegionId_n() });
        moFieldFkAddressFormatTypeId_n.setFieldValue(new int[] { moBizPartnerBranch.getFkAddressFormatTypeId_n() });
        moFieldIsAddressPrintable.setFieldValue(moBizPartnerBranch.getIsAddressPrintable());
        moFieldIsDeleted.setFieldValue(moBizPartnerBranch.getIsDeleted());

        // official address:

        moBizPartnerBranchAddress = moBizPartnerBranch.getDbmsBizPartnerBranchAddressOfficial();
        if (moBizPartnerBranchAddress != null) {
            moPanelBizPartnerBranchAddress.setRegistry(moBizPartnerBranchAddress);
        }
        
        // additional addresses:

        for (int index = 1; index < moBizPartnerBranch.getDbmsBizPartnerBranchAddresses().size(); index++) { // start from index 1 to skip official address
            SDataBizPartnerBranchAddress address = moBizPartnerBranch.getDbmsBizPartnerBranchAddresses().get(index);
            moBizPartnerBranchAddressPane.addTableRow(new SDataBizPartnerBranchAddressRow(address));
            if (address.getIsDeleted()) {
                ((STableModel) moBizPartnerBranchAddressPane.getTable().getModel()).getTableRow(index - 1).setStyle(STableConstants.STYLE_DELETE);
            }
        }
        
        moBizPartnerBranchAddressPane.renderTableRows();
        moBizPartnerBranchAddressPane.setTableRowSelection(0);

        // Read branch bank accounts:

        for (int index = 0; index < moBizPartnerBranch.getDbmsBizPartnerBranchBankAccounts().size(); index++) {
            SDataBizPartnerBranchBankAccount bankAccount = moBizPartnerBranch.getDbmsBizPartnerBranchBankAccounts().get(index);
            moBizPartnerBranchBankAccountPane.addTableRow(new SDataBizPartnerBranchBankAccountRow(bankAccount));
            if (bankAccount.getIsDeleted()) {
                ((STableModel) moBizPartnerBranchBankAccountPane.getTable().getModel()).getTableRow(index).setStyle(STableConstants.STYLE_DELETE);
            }
        }
        
        moBizPartnerBranchBankAccountPane.renderTableRows();
        moBizPartnerBranchBankAccountPane.setTableRowSelection(0);

        // Read branch contacts:

        moBizPartnerBranchContact = moBizPartnerBranch.getDbmsBizPartnerBranchContactOfficial();
        
        if (moBizPartnerBranchContact != null) {
            moFieldTelAreaCode01.setFieldValue(moBizPartnerBranchContact.getTelAreaCode01());
            moFieldTelNumber01.setFieldValue(moBizPartnerBranchContact.getTelNumber01());
            moFieldTelExt01.setFieldValue(moBizPartnerBranchContact.getTelExt01());
            moFieldFkTelephoneType01Id.setFieldValue(new int[] { moBizPartnerBranchContact.getFkTelephoneType01Id() });
            moFieldTelAreaCode02.setFieldValue(moBizPartnerBranchContact.getTelAreaCode02());
            moFieldTelNumber02.setFieldValue(moBizPartnerBranchContact.getTelNumber02());
            moFieldTelExt02.setFieldValue(moBizPartnerBranchContact.getTelExt02());
            moFieldFkTelephoneType02Id.setFieldValue(new int[] { moBizPartnerBranchContact.getFkTelephoneType02Id() });
            moFieldTelAreaCode03.setFieldValue(moBizPartnerBranchContact.getTelAreaCode03());
            moFieldTelNumber03.setFieldValue(moBizPartnerBranchContact.getTelNumber03());
            moFieldTelExt03.setFieldValue(moBizPartnerBranchContact.getTelExt03());
            moFieldFkTelephoneType03Id.setFieldValue(new int[] { moBizPartnerBranchContact.getFkTelephoneType03Id() });
            moFieldEmail.setFieldValue(moBizPartnerBranchContact.getEmail01());
        }
        
        for (int index = 1; index < moBizPartnerBranch.getDbmsBizPartnerBranchContacts().size(); index++) { // start from index 1 to skip official contact
            SDataBizPartnerBranchContact contact = moBizPartnerBranch.getDbmsBizPartnerBranchContacts().get(index);
            moBizPartnerBranchContactPane.addTableRow(new SDataBizPartnerBranchContactRow(contact));
            if (contact.getIsDeleted()) {
                ((STableModel) moBizPartnerBranchContactPane.getTable().getModel()).getTableRow(index - 1).setStyle(STableConstants.STYLE_DELETE);
            }
        }
        
        moBizPartnerBranchContactPane.renderTableRows();
        moBizPartnerBranchContactPane.setTableRowSelection(0);

        // Read branch notes:

        for (int index = 0; index < moBizPartnerBranch.getDbmsBizPartnerBranchNotes().size(); index++) {
            SDataBizPartnerBranchNote note = moBizPartnerBranch.getDbmsBizPartnerBranchNotes().get(index);
            moBizPartnerBranchNotePane.addTableRow(new SDataBizPartnerBranchNoteRow(note));
        }
        
        moBizPartnerBranchNotePane.renderTableRows();
        moBizPartnerBranchNotePane.setTableRowSelection(0);

        // Set other fields:

        if (mbParamIsInMainWindow) {
            jckIsDeleted.setEnabled(false);
        }
        else {
            jckIsDeleted.setEnabled(true);
        }

        renderBranch();
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        if (moBizPartnerBranch == null) {
            moBizPartnerBranch = new SDataBizPartnerBranch();
            moBizPartnerBranch.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
        }
        else {
            moBizPartnerBranch.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
        }

        moBizPartnerBranch.setFkBizPartnerBranchTypeId(mbParamIsInMainWindow ? SDataConstantsSys.BPSS_TP_BPB_HQ : SDataConstantsSys.BPSS_TP_BPB_B);
        moBizPartnerBranch.setBizPartnerBranch(moFieldBizPartnerBranch.getString());
        moBizPartnerBranch.setFkTaxRegionId_n(moFieldFkTaxRegionId_n.getKeyAsIntArray()[0]);
        moBizPartnerBranch.setFkAddressFormatTypeId_n(moFieldFkAddressFormatTypeId_n.getKeyAsIntArray()[0]);
        moBizPartnerBranch.setIsAddressPrintable(moFieldIsAddressPrintable.getBoolean());
        moBizPartnerBranch.setIsDeleted(moFieldIsDeleted.getBoolean());

        moBizPartnerBranch.setDbmsBizPartnerBranchType(mbParamIsInMainWindow ? SModSysConsts.TXT_HQ : SModSysConsts.TXT_BRANCH);
        moBizPartnerBranch.setDbmsTaxRegion(jcbFkTaxRegionId_n.getSelectedIndex() <= 0 ? "" : jcbFkTaxRegionId_n.getSelectedItem().toString());
        
        // Get official address:

        moBizPartnerBranch.getDbmsBizPartnerBranchAddresses().clear();

        moBizPartnerBranchAddress = (SDataBizPartnerBranchAddress) moPanelBizPartnerBranchAddress.getRegistry();
        //moBizPartnerBranchAddress.setIsDefault(...);
        moBizPartnerBranchAddress.setFkAddressTypeId(SDataConstantsSys.BPSS_TP_ADD_OFF); // official address
        
        moBizPartnerBranchAddress.setIsRegistryEdited(true);
        moBizPartnerBranch.getDbmsBizPartnerBranchAddresses().add(moBizPartnerBranchAddress);

        // Get other addresses:

        for (int index = 0; index < moBizPartnerBranchAddressPane.getTable().getRowCount(); index++) {
            moBizPartnerBranch.getDbmsBizPartnerBranchAddresses().add((SDataBizPartnerBranchAddress) moBizPartnerBranchAddressPane.getTableRow(index).getData());
        }

        // Get bank accounts:

        moBizPartnerBranch.getDbmsBizPartnerBranchBankAccounts().clear();

        for (int index = 0; index < moBizPartnerBranchBankAccountPane.getTable().getRowCount(); index++) {
            moBizPartnerBranch.getDbmsBizPartnerBranchBankAccounts().add((SDataBizPartnerBranchBankAccount) moBizPartnerBranchBankAccountPane.getTableRow(index).getData());
        }

        // Save branch contacts:

        moBizPartnerBranch.getDbmsBizPartnerBranchContacts().clear();

        if (moBizPartnerBranchContact == null) {
            moBizPartnerBranchContact = new SDataBizPartnerBranchContact();
            moBizPartnerBranchContact.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
        }
        else {
            moBizPartnerBranchContact.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
        }
        
        moBizPartnerBranchContact.setTelAreaCode01(moFieldFkTelephoneType01Id.getKeyAsIntArray()[0] <= SDataConstantsSys.BPSS_TP_TEL_NA ? "" : moFieldTelAreaCode01.getString());
        moBizPartnerBranchContact.setTelNumber01(moFieldFkTelephoneType01Id.getKeyAsIntArray()[0] <= SDataConstantsSys.BPSS_TP_TEL_NA ? "" : moFieldTelNumber01.getString());
        moBizPartnerBranchContact.setTelExt01(moFieldFkTelephoneType01Id.getKeyAsIntArray()[0] <= SDataConstantsSys.BPSS_TP_TEL_NA ? "" : moFieldTelExt01.getString());
        moBizPartnerBranchContact.setFkTelephoneType01Id(moFieldFkTelephoneType01Id.getKeyAsIntArray()[0] == 0 ? SDataConstantsSys.BPSS_TP_TEL_NA : moFieldFkTelephoneType01Id.getKeyAsIntArray()[0]);
        moBizPartnerBranchContact.setTelAreaCode02(moFieldFkTelephoneType02Id.getKeyAsIntArray()[0] <= SDataConstantsSys.BPSS_TP_TEL_NA ? "" : moFieldTelAreaCode02.getString());
        moBizPartnerBranchContact.setTelNumber02(moFieldFkTelephoneType02Id.getKeyAsIntArray()[0] <= SDataConstantsSys.BPSS_TP_TEL_NA ? "" : moFieldTelNumber02.getString());
        moBizPartnerBranchContact.setTelExt02(moFieldFkTelephoneType02Id.getKeyAsIntArray()[0] <= SDataConstantsSys.BPSS_TP_TEL_NA ? "" : moFieldTelExt02.getString());
        moBizPartnerBranchContact.setFkTelephoneType02Id(moFieldFkTelephoneType02Id.getKeyAsIntArray()[0] == 0 ? SDataConstantsSys.BPSS_TP_TEL_NA : moFieldFkTelephoneType02Id.getKeyAsIntArray()[0]);
        moBizPartnerBranchContact.setTelAreaCode03(moFieldFkTelephoneType03Id.getKeyAsIntArray()[0] <= SDataConstantsSys.BPSS_TP_TEL_NA ? "" : moFieldTelAreaCode03.getString());
        moBizPartnerBranchContact.setTelNumber03(moFieldFkTelephoneType03Id.getKeyAsIntArray()[0] <= SDataConstantsSys.BPSS_TP_TEL_NA ? "" : moFieldTelNumber03.getString());
        moBizPartnerBranchContact.setTelExt03(moFieldFkTelephoneType03Id.getKeyAsIntArray()[0] <= SDataConstantsSys.BPSS_TP_TEL_NA ? "" : moFieldTelExt03.getString());
        moBizPartnerBranchContact.setFkTelephoneType03Id(moFieldFkTelephoneType03Id.getKeyAsIntArray()[0] == 0 ? SDataConstantsSys.BPSS_TP_TEL_NA : moFieldFkTelephoneType03Id.getKeyAsIntArray()[0]);
        moBizPartnerBranchContact.setEmail01(moFieldEmail.getString());
        moBizPartnerBranchContact.setFkContactTypeId(SDataConstantsSys.BPSS_TP_CON_ADM);
        
        moBizPartnerBranchContact.setIsRegistryEdited(true);
        moBizPartnerBranch.getDbmsBizPartnerBranchContacts().add(moBizPartnerBranchContact);

        for (int index = 0; index < moBizPartnerBranchContactPane.getTable().getRowCount(); index++) {
            moBizPartnerBranch.getDbmsBizPartnerBranchContacts().add((SDataBizPartnerBranchContact) moBizPartnerBranchContactPane.getTableRow(index).getData());
        }

        // Save branch notes:

        moBizPartnerBranch.getDbmsBizPartnerBranchNotes().clear();

        for (int index = 0; index < moBizPartnerBranchNotePane.getTable().getRowCount(); index++) {
            moBizPartnerBranch.getDbmsBizPartnerBranchNotes().add((SDataBizPartnerBranchNote) moBizPartnerBranchNotePane.getTableRow(index).getData());
        }

        moBizPartnerBranch.setIsRegistryEdited(true);
        
        return moBizPartnerBranch;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {

    }

    @Override
    public java.lang.Object getValue(int type) {
        Object value = null;
        
        switch(type) {
            case SDataConstants.LOCU_CTY:
                value = moPanelBizPartnerBranchAddress.getValue(type);
                break;
                
            default:
        }
        
        return value;
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbAddAddress) {
                actionAddAddress();
            }
            else if (button == jbModifyAddress) {
                actionModifyAddress();
            }
            else if (button == jbAddBankAccount) {
                actionAddBankAccount();
            }
            else if (button == jbModifyBankAccount) {
                actionModifyBankAccount();
            }
            else if (button == jbAddContact) {
                actionAddContact();
            }
            else if (button == jbModifyContact) {
                actionModifyContact();
            }
            else if (button == jbAddNote) {
                actionAddNote();
            }
            else if (button == jbModifyNote) {
                actionModifyNote();
            }
            else if (button == jbDeleteNote) {
                actionDeleteNote();
            }
        }
    }

    public void setParamIsInMainWindow(boolean b) { mbParamIsInMainWindow = b; renderBranch(); }
    public void setParamBizPartnerDescription(java.lang.String s) { msParamBizPartnerDescription = s; }
    public void setParamFormBizPartner(erp.mbps.form.SFormBizPartner o) { moParamFormBizPartner = o; }
    public void setParamIsCompany(boolean b) { mbParamIsCompany = b; renderBankAccount(); moPanelBizPartnerBranchAddress.setParamIsCompany(b); }

    public void requestFocusFirstTime() {
        if (jtfBizPartnerBranch.isEnabled()) {
            jtfBizPartnerBranch.requestFocus();
        }
        else {
            jcbFkTaxRegionId_n.requestFocus();
        }
    }
}
