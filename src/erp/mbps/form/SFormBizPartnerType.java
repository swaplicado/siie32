/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SFormBizPartnerType.java
 *
 * Created on 21/09/2009, 11:47:46 AM
 */

package erp.mbps.form;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataUtilities;
import erp.data.SProcConstants;
import erp.lib.SLibConstants;
import erp.lib.form.SFormComponentItem;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.mbps.data.SDataBizPartnerType;
import erp.mod.SModSysConsts;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.AbstractAction;

/**
 *
 * @author Alfonso Flores
 */
public class SFormBizPartnerType extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mbps.data.SDataBizPartnerType moBizPartnerType;
    private erp.lib.form.SFormField moFieldPkBizPartnerCategortyId;
    private erp.lib.form.SFormField moFieldBizPartnerType;
    private erp.lib.form.SFormField moFieldFkCreditTypeId;
    private erp.lib.form.SFormField moFieldFkRiskTypeId;
    private erp.lib.form.SFormField moFieldCreditLimit;
    private erp.lib.form.SFormField moFieldDaysOfCredit;
    private erp.lib.form.SFormField moFieldDaysOfGrace;
    private erp.lib.form.SFormField moFieldIsDeleted;

    /** Creates new form SFormBizPartnerType */
    public SFormBizPartnerType(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;
        mnFormType = SDataConstants.ITMU_BRD;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlPkBizPartnerCategoryId = new javax.swing.JLabel();
        jcbPkBizPartnerCategoryId = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jlBizPartnerType = new javax.swing.JLabel();
        jtfBizPartnerType = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jlFkCreditTypeId = new javax.swing.JLabel();
        jcbFkCreditTypeId = new javax.swing.JComboBox<SFormComponentItem>();
        jPanel7 = new javax.swing.JPanel();
        jlCreditLimit = new javax.swing.JLabel();
        jtfCreditLimit = new javax.swing.JTextField();
        jtfCurrencyKey = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jlDaysOfCredit = new javax.swing.JLabel();
        jtfDaysOfCredit = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jlDaysOfGrace = new javax.swing.JLabel();
        jtfDaysOfGrace = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jlFkRiskId = new javax.swing.JLabel();
        jcbFkRiskId = new javax.swing.JComboBox<SFormComponentItem>();
        jPanel12 = new javax.swing.JPanel();
        jckIsDeleted = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tipo de asociado de negocios");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel11.setLayout(new java.awt.GridLayout(8, 1, 0, 2));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlPkBizPartnerCategoryId.setForeground(java.awt.Color.blue);
        jlPkBizPartnerCategoryId.setText("Categoría de asociado de negocios: *");
        jlPkBizPartnerCategoryId.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel4.add(jlPkBizPartnerCategoryId);

        jcbPkBizPartnerCategoryId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbPkBizPartnerCategoryId.setPreferredSize(new java.awt.Dimension(200, 23));
        jcbPkBizPartnerCategoryId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbPkBizPartnerCategoryIdItemStateChanged(evt);
            }
        });
        jPanel4.add(jcbPkBizPartnerCategoryId);

        jPanel11.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlBizPartnerType.setText("Tipo de asociado de negocios: *");
        jlBizPartnerType.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel5.add(jlBizPartnerType);

        jtfBizPartnerType.setText("TIPO");
        jtfBizPartnerType.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel5.add(jtfBizPartnerType);

        jPanel11.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlFkCreditTypeId.setText("Tipo de crédito: *");
        jlFkCreditTypeId.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel6.add(jlFkCreditTypeId);

        jcbFkCreditTypeId.setPreferredSize(new java.awt.Dimension(200, 23));
        jcbFkCreditTypeId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbFkCreditTypeIdItemStateChanged(evt);
            }
        });
        jPanel6.add(jcbFkCreditTypeId);

        jPanel11.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlCreditLimit.setText("Límite de crédito: *");
        jlCreditLimit.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel7.add(jlCreditLimit);

        jtfCreditLimit.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfCreditLimit.setText("0.00");
        jtfCreditLimit.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jtfCreditLimit);

        jtfCurrencyKey.setEditable(false);
        jtfCurrencyKey.setEnabled(false);
        jtfCurrencyKey.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel7.add(jtfCurrencyKey);

        jPanel11.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlDaysOfCredit.setText("Días de crédito: *");
        jlDaysOfCredit.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel8.add(jlDaysOfCredit);

        jtfDaysOfCredit.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfDaysOfCredit.setText("0");
        jtfDaysOfCredit.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel8.add(jtfDaysOfCredit);

        jPanel11.add(jPanel8);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlDaysOfGrace.setText("Días de gracia:");
        jlDaysOfGrace.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel9.add(jlDaysOfGrace);

        jtfDaysOfGrace.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfDaysOfGrace.setText("0");
        jtfDaysOfGrace.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel9.add(jtfDaysOfGrace);

        jPanel11.add(jPanel9);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlFkRiskId.setText("Riesgo: *");
        jlFkRiskId.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel10.add(jlFkRiskId);

        jcbFkRiskId.setPreferredSize(new java.awt.Dimension(200, 23));
        jcbFkRiskId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbFkRiskIdItemStateChanged(evt);
            }
        });
        jPanel10.add(jcbFkRiskId);

        jPanel11.add(jPanel10);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jckIsDeleted.setText("Registro eliminado");
        jPanel12.add(jckIsDeleted);

        jPanel11.add(jPanel12);

        jPanel2.add(jPanel11, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 33));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jPanel1.add(jbCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        setSize(new java.awt.Dimension(537, 361));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivate();
    }//GEN-LAST:event_formWindowActivated

    private void jcbFkCreditTypeIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbFkCreditTypeIdItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            itemStateChangedCreditLimit();
        }
    }//GEN-LAST:event_jcbFkCreditTypeIdItemStateChanged

    private void jcbPkBizPartnerCategoryIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbPkBizPartnerCategoryIdItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            renderCategorySettings();
        }
    }//GEN-LAST:event_jcbPkBizPartnerCategoryIdItemStateChanged

    private void jcbFkRiskIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbFkRiskIdItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbFkRiskIdItemStateChanged

    private void itemStateChangedCreditLimit() {
        renderCreditLimit();
    }
    
    private void renderTypeCredit(){
        if (moFieldPkBizPartnerCategortyId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_CT_BP_SUP ||moFieldPkBizPartnerCategortyId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_CT_BP_CUS){
            jtfCreditLimit.setEnabled(true);
            jtfDaysOfCredit.setEnabled(true);
            jtfDaysOfGrace.setEnabled(true);           
        }
        else {
            jtfCreditLimit.setEnabled(false);
            jtfDaysOfCredit.setEnabled(false);
            jtfDaysOfGrace.setEnabled(false);
            moFieldCreditLimit.setDouble(0d);
            moFieldDaysOfCredit.setInteger(0);
            moFieldDaysOfGrace.setInteger(0);

        }
    }
    
    private void renderCreditLimit() {
        renderTypeCredit();
        if (moFieldFkCreditTypeId.getKeyAsIntArray()[0] == 0 || moFieldFkCreditTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_CRED_CRED_NO) {
            jtfCreditLimit.setEditable(false);
            jtfCreditLimit.setFocusable(false);
            jtfDaysOfCredit.setEditable(false);
            jtfDaysOfCredit.setFocusable(false);
            jtfDaysOfGrace.setEditable(false);
            jtfDaysOfGrace.setFocusable(false);
            moFieldCreditLimit.setDouble(0d);
            moFieldDaysOfCredit.setInteger(0);
            moFieldDaysOfGrace.setInteger(0);
            
        }
        else if (moFieldFkCreditTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_CRED_CRED_UNLIM) {
            jtfCreditLimit.setEditable(false);
            jtfCreditLimit.setFocusable(false);
            moFieldCreditLimit.setDouble(0d);
            jtfDaysOfCredit.setEditable(true);
            jtfDaysOfCredit.setFocusable(true);
            jtfDaysOfGrace.setEditable(true);
            jtfDaysOfGrace.setFocusable(true);
        }
        else {
            jtfCreditLimit.setEditable(true);
            jtfCreditLimit.setFocusable(true);
            jtfDaysOfCredit.setEditable(true);
            jtfDaysOfCredit.setFocusable(true);
            jtfDaysOfGrace.setEditable(true);
            jtfDaysOfGrace.setFocusable(true);
        }        
    }
    
    private void renderCategorySettings() {
        boolean enable=(moFieldPkBizPartnerCategortyId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_CT_BP_SUP ||moFieldPkBizPartnerCategortyId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_CT_BP_CUS);
        jlFkCreditTypeId.setEnabled(enable);
        moFieldFkCreditTypeId.setFieldValue(new int[] { SDataConstantsSys.BPSS_TP_CRED_CRED_NO });
        jlCreditLimit.setEnabled(enable);
        jlDaysOfCredit.setEnabled(enable);
        jlDaysOfGrace.setEnabled(enable);
        jlFkRiskId.setEnabled(enable);
        jcbFkCreditTypeId.setEnabled(enable);
        jcbFkRiskId.setEnabled(enable);
        jtfCurrencyKey.setEnabled(enable);
        renderTypeCredit();
    }
    
    private void initComponentsExtra() {
        mvFields = new Vector<SFormField>();

        moFieldPkBizPartnerCategortyId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbPkBizPartnerCategoryId, jlPkBizPartnerCategoryId);
        moFieldBizPartnerType = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfBizPartnerType, jlBizPartnerType);
        moFieldBizPartnerType.setLengthMax(50);
        moFieldFkCreditTypeId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkCreditTypeId, jlFkCreditTypeId);
        moFieldFkRiskTypeId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkRiskId, jlFkRiskId);
        moFieldCreditLimit = new SFormField(miClient, SLibConstants.DATA_TYPE_DOUBLE, false, jtfCreditLimit, jlCreditLimit);
        moFieldDaysOfCredit = new SFormField(miClient, SLibConstants.DATA_TYPE_INTEGER, false, jtfDaysOfCredit, jlDaysOfCredit);
        moFieldDaysOfGrace = new SFormField(miClient, SLibConstants.DATA_TYPE_INTEGER, false, jtfDaysOfGrace, jlDaysOfGrace);
        moFieldIsDeleted = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsDeleted);

        mvFields.add(moFieldPkBizPartnerCategortyId);
        mvFields.add(moFieldBizPartnerType);
        mvFields.add(moFieldFkCreditTypeId);
        mvFields.add(moFieldCreditLimit);
        mvFields.add(moFieldDaysOfCredit);
        mvFields.add(moFieldDaysOfGrace);
        mvFields.add(moFieldFkRiskTypeId);
        mvFields.add(moFieldIsDeleted);

        jbOk.addActionListener(this);
        jbCancel.addActionListener(this);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction actionCancel = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionCancel, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivate() {
        if (mbFirstTime) {
            mbFirstTime = false;
            if (moBizPartnerType == null) {
                jcbPkBizPartnerCategoryId.requestFocus();
            }
            else {
                jtfBizPartnerType.requestFocus();
            }
        }
    }

    private void actionOk() {
        SFormValidation validation = formValidate();

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOk;
    private javax.swing.JComboBox<SFormComponentItem> jcbFkCreditTypeId;
    private javax.swing.JComboBox<SFormComponentItem> jcbFkRiskId;
    private javax.swing.JComboBox jcbPkBizPartnerCategoryId;
    private javax.swing.JCheckBox jckIsDeleted;
    private javax.swing.JLabel jlBizPartnerType;
    private javax.swing.JLabel jlCreditLimit;
    private javax.swing.JLabel jlDaysOfCredit;
    private javax.swing.JLabel jlDaysOfGrace;
    private javax.swing.JLabel jlFkCreditTypeId;
    private javax.swing.JLabel jlFkRiskId;
    private javax.swing.JLabel jlPkBizPartnerCategoryId;
    private javax.swing.JTextField jtfBizPartnerType;
    private javax.swing.JTextField jtfCreditLimit;
    private javax.swing.JTextField jtfCurrencyKey;
    private javax.swing.JTextField jtfDaysOfCredit;
    private javax.swing.JTextField jtfDaysOfGrace;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moBizPartnerType = null;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        jtfCurrencyKey.setText(miClient.getSessionXXX().getParamsErp().getDbmsDataCurrency().getKey());
        moFieldFkCreditTypeId.setFieldValue(new int[] { SModSysConsts.BPSS_TP_CRED_CRED_NO });
        moFieldFkRiskTypeId.setFieldValue(new int[] { SModSysConsts.BPSS_RISK_C_RISK_HIGH });
        jckIsDeleted.setEnabled(false);
        jcbPkBizPartnerCategoryId.setEnabled(true);
    }

    @Override
    @SuppressWarnings("unchecked")
    public void formRefreshCatalogues() {
        SFormUtilities.populateComboBox(miClient, jcbPkBizPartnerCategoryId, SDataConstants.BPSS_CT_BP);
        SFormUtilities.populateComboBox(miClient, jcbFkCreditTypeId, SDataConstants.BPSS_TP_CRED);
        SFormUtilities.populateComboBox(miClient, jcbFkRiskId, SDataConstants.BPSS_RISK);
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        if (!validation.getIsError()) {
            Object[] oParamsIn = new Object[] { moBizPartnerType == null ? moFieldPkBizPartnerCategortyId.getKeyAsIntArray()[0] : moBizPartnerType.getPkBizPartnerCategoryId(),
            moBizPartnerType == null ? 0 : moBizPartnerType.getPkBizPartnerTypeId(), moFieldBizPartnerType.getString() };

            if (SDataUtilities.callProcedureVal(miClient, SProcConstants.BPSU_TP_BP, oParamsIn, SLibConstants.EXEC_MODE_VERBOSE) > 0) {
                validation.setMessage("El valor del campo '"  + jlBizPartnerType.getText() + "' ya existe.");
                validation.setComponent(jtfBizPartnerType);
            }
            else if ((moFieldPkBizPartnerCategortyId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_CT_BP_SUP || moFieldPkBizPartnerCategortyId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_CT_BP_CUS) &&
                                jcbFkCreditTypeId.isEnabled() && moFieldFkCreditTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_CRED_CRED_LIM && moFieldCreditLimit.getDouble() == 0) {
                                validation.setComponent(jtfCreditLimit);
                                validation.setMessage("Se debe ingresar un valor para el campo '" + jlCreditLimit.getText() + "'.");
                        }
            else if ((moFieldPkBizPartnerCategortyId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_CT_BP_SUP || moFieldPkBizPartnerCategortyId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_CT_BP_CUS) &&
            jcbFkCreditTypeId.isEnabled() && (moFieldFkCreditTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_CRED_CRED_LIM || moFieldFkCreditTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_CRED_CRED_UNLIM) && 
            moFieldDaysOfCredit.getDouble() == 0){
                    validation.setComponent(jtfDaysOfCredit);
                    validation.setMessage("Se debe ingresar un valor para el campo '" + jlDaysOfCredit.getText() + "'.");
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        moBizPartnerType = (SDataBizPartnerType) registry;

        moFieldPkBizPartnerCategortyId.setFieldValue(new int[] { moBizPartnerType.getPkBizPartnerCategoryId() });
        moFieldBizPartnerType.setFieldValue(moBizPartnerType.getBizPartnerType());
        moFieldDaysOfCredit.setFieldValue(moBizPartnerType.getDaysOfCredit());
        moFieldDaysOfGrace.setFieldValue(moBizPartnerType.getDaysOfGrace());
        moFieldCreditLimit.setFieldValue(moBizPartnerType.getCreditLimit());
        moFieldFkCreditTypeId.setFieldValue(new int[] { moBizPartnerType.getFkCreditTypeId() });
        moFieldFkRiskTypeId.setFieldValue(new int[] { moBizPartnerType.getFkRiskTypeId() });
        moFieldIsDeleted.setFieldValue(moBizPartnerType.getIsDeleted());

        if (moBizPartnerType.getIsCanDelete()) {
            jckIsDeleted.setEnabled(true);
        }

        jcbPkBizPartnerCategoryId.setEnabled(false);
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        if (moBizPartnerType == null) {
            moBizPartnerType = new SDataBizPartnerType();
            moBizPartnerType.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
        }
        else {
            moBizPartnerType.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
        }

        moBizPartnerType.setPkBizPartnerCategoryId(moFieldPkBizPartnerCategortyId.getKeyAsIntArray()[0]);
        moBizPartnerType.setBizPartnerType(moFieldBizPartnerType.getString());
        moBizPartnerType.setIsCanEdit(true);
        moBizPartnerType.setIsCanDelete(true);
        moBizPartnerType.setCreditLimit(jtfCreditLimit.isEnabled() ? moFieldCreditLimit.getDouble() : 0d);
        moBizPartnerType.setDaysOfCredit(jtfDaysOfCredit.isEnabled() ? moFieldDaysOfCredit.getInteger() : 0);
        moBizPartnerType.setDaysOfGrace(jtfDaysOfGrace.isEnabled() ? moFieldDaysOfGrace.getInteger() : 0);
        moBizPartnerType.setFkCreditTypeId(moFieldFkCreditTypeId.getKeyAsIntArray()[0]);
        moBizPartnerType.setFkRiskTypeId(moFieldFkRiskTypeId.getKeyAsIntArray()[0]);
        moBizPartnerType.setIsDeleted(moFieldIsDeleted.getBoolean());

        return moBizPartnerType;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public java.lang.Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOk) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
        }
    }
}
