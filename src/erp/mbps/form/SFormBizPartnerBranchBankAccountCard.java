/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SFormBizPartnerBranchBankAccountCard.java
 *
 * Created on 29/09/2009, 03:45:33 PM
 */

package erp.mbps.form;

import erp.data.SDataConstants;
import erp.lib.SLibConstants;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.mbps.data.SDataBizPartnerBranchBankAccountCard;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.AbstractAction;

/**
 *
 * @author Alfonso Flores, Sergio Flores
 */
public class SFormBizPartnerBranchBankAccountCard extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mbps.data.SDataBizPartnerBranchBankAccountCard moBizPartnerBranchBankAccountCard;
    private erp.lib.form.SFormField moFieldFkCardTypeId;
    private erp.lib.form.SFormField moFieldHolder;
    private erp.lib.form.SFormField moFieldCardNumber;
    private erp.lib.form.SFormField moFieldSecurityCode;
    private erp.lib.form.SFormField moFieldExpirationDate;
    private erp.lib.form.SFormField moFieldIsDeleted;

    /** Creates new form SFormBizPartnerBranchBankAccountCard */
    public SFormBizPartnerBranchBankAccountCard(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;
        mnFormType = SDataConstants.BPSU_BANK_ACC_CARD;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlFkCardTypeId = new javax.swing.JLabel();
        jcbFkCardTypeId = new javax.swing.JComboBox();
        jlHolder = new javax.swing.JLabel();
        jtfHolder = new javax.swing.JTextField();
        jlCardNumber = new javax.swing.JLabel();
        jtfCardNumber = new javax.swing.JTextField();
        jlSecurityCode = new javax.swing.JLabel();
        jpfSecurityCode = new javax.swing.JPasswordField();
        jlExpirationDate = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jbExpirationDate = new javax.swing.JButton();
        jftExpirationDate = new javax.swing.JFormattedTextField();
        jckIsDeleted = new javax.swing.JCheckBox();

        jLabel1.setText("jLabel1");

        jTextField3.setText("jTextField3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tarjeta de cuenta bancaria");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(392, 33));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jPanel1.add(jbCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(6, 2, 5, 5));

        jlFkCardTypeId.setText("Tipo de tarjeta: *");
        jPanel3.add(jlFkCardTypeId);

        jcbFkCardTypeId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(jcbFkCardTypeId);

        jlHolder.setText("Titular: *");
        jPanel3.add(jlHolder);

        jtfHolder.setText("PROP");
        jPanel3.add(jtfHolder);

        jlCardNumber.setText("Número de tarjeta: *");
        jPanel3.add(jlCardNumber);

        jtfCardNumber.setText("NUM TARJ");
        jPanel3.add(jtfCardNumber);

        jlSecurityCode.setText("Código de seguridad: *");
        jPanel3.add(jlSecurityCode);

        jpfSecurityCode.setText("jPasswordField1");
        jPanel3.add(jpfSecurityCode);

        jlExpirationDate.setText("Fecha de expiración: *");
        jPanel3.add(jlExpirationDate);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jbExpirationDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/cal_date_day.gif"))); // NOI18N
        jbExpirationDate.setToolTipText("Seleccionar fecha");
        jbExpirationDate.setFocusable(false);
        jbExpirationDate.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel4.add(jbExpirationDate, java.awt.BorderLayout.EAST);

        jftExpirationDate.setText("dd/mm/yyyy");
        jPanel4.add(jftExpirationDate, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel4);

        jckIsDeleted.setForeground(new java.awt.Color(204, 0, 0));
        jckIsDeleted.setText("Registro eliminado");
        jPanel3.add(jckIsDeleted);

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(400, 300));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivate();
    }//GEN-LAST:event_formWindowActivated

    private void initComponentsExtra() {
        mvFields = new Vector<SFormField>();

        moFieldFkCardTypeId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkCardTypeId, jlFkCardTypeId);
        moFieldHolder = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfHolder, jlHolder);
        moFieldHolder.setLengthMax(50);
        moFieldCardNumber = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfCardNumber, jlCardNumber);
        moFieldCardNumber.setLengthMax(25);
        moFieldSecurityCode = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jpfSecurityCode, jlSecurityCode);
        moFieldSecurityCode.setLengthMax(5);

        moFieldExpirationDate = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_DATE, true, jftExpirationDate, jlExpirationDate);
        moFieldExpirationDate.setPickerButton(jbExpirationDate);
        moFieldIsDeleted = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsDeleted);

        mvFields.add(moFieldFkCardTypeId);
        mvFields.add(moFieldHolder);
        mvFields.add(moFieldCardNumber);
        mvFields.add(moFieldSecurityCode);
        mvFields.add(moFieldExpirationDate);
        mvFields.add(moFieldIsDeleted);

        jbOk.addActionListener(this);
        jbCancel.addActionListener(this);
        jbExpirationDate.addActionListener(this);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), action, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivate() {
        if (mbFirstTime) {
            mbFirstTime = false;
            jcbFkCardTypeId.requestFocus();
        }
    }

    private void actionOk() {
        SFormValidation validation = formValidate();

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    private void actionSetExpirationDate() {
        miClient.getGuiDatePickerXXX().formReset();
        miClient.getGuiDatePickerXXX().setDate(moFieldExpirationDate.getDate());
        miClient.getGuiDatePickerXXX().setVisible(true);

        if (miClient.getGuiDatePickerXXX().getFormResult() == SLibConstants.FORM_RESULT_OK) {
            moFieldExpirationDate.setFieldValue(miClient.getGuiDatePickerXXX().getGuiDate());
            jftExpirationDate.requestFocus();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbExpirationDate;
    private javax.swing.JButton jbOk;
    private javax.swing.JComboBox jcbFkCardTypeId;
    private javax.swing.JCheckBox jckIsDeleted;
    private javax.swing.JFormattedTextField jftExpirationDate;
    private javax.swing.JLabel jlCardNumber;
    private javax.swing.JLabel jlExpirationDate;
    private javax.swing.JLabel jlFkCardTypeId;
    private javax.swing.JLabel jlHolder;
    private javax.swing.JLabel jlSecurityCode;
    private javax.swing.JPasswordField jpfSecurityCode;
    private javax.swing.JTextField jtfCardNumber;
    private javax.swing.JTextField jtfHolder;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moBizPartnerBranchBankAccountCard = null;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        moFieldExpirationDate.setFieldValue(miClient.getSessionXXX().getWorkingDate());
        jpfSecurityCode.setText("");
        jckIsDeleted.setEnabled(false);
    }

    @Override
    @SuppressWarnings("unchecked")
    public void formRefreshCatalogues() {
        SFormUtilities.populateComboBox(miClient, jcbFkCardTypeId, SDataConstants.FINS_TP_CARD);
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        moBizPartnerBranchBankAccountCard = (SDataBizPartnerBranchBankAccountCard) registry;

        moFieldFkCardTypeId.setFieldValue(new int[] { moBizPartnerBranchBankAccountCard.getFkCardTypeId() });
        moFieldHolder.setFieldValue(moBizPartnerBranchBankAccountCard.getHolder());
        moFieldCardNumber.setFieldValue(moBizPartnerBranchBankAccountCard.getCardNumber());
        moFieldSecurityCode.setFieldValue(moBizPartnerBranchBankAccountCard.getSecurityCode());
        moFieldExpirationDate.setFieldValue(moBizPartnerBranchBankAccountCard.getExpirationDate());
        moFieldIsDeleted.setFieldValue(moBizPartnerBranchBankAccountCard.getIsDeleted());

        jckIsDeleted.setEnabled(true);
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        if (moBizPartnerBranchBankAccountCard == null) {
            moBizPartnerBranchBankAccountCard = new SDataBizPartnerBranchBankAccountCard();
        }

        moBizPartnerBranchBankAccountCard.setFkCardTypeId(moFieldFkCardTypeId.getKeyAsIntArray()[0]);
        moBizPartnerBranchBankAccountCard.setHolder(moFieldHolder.getString());
        moBizPartnerBranchBankAccountCard.setCardNumber(moFieldCardNumber.getString());
        moBizPartnerBranchBankAccountCard.setSecurityCode(moFieldSecurityCode.getString());
        moBizPartnerBranchBankAccountCard.setExpirationDate(moFieldExpirationDate.getDate());
        moBizPartnerBranchBankAccountCard.setIsDeleted(moFieldIsDeleted.getBoolean());

        moBizPartnerBranchBankAccountCard.setDbmsCardType(jcbFkCardTypeId.getSelectedItem().toString());
        
        moBizPartnerBranchBankAccountCard.setIsRegistryEdited(true);

        return moBizPartnerBranchBankAccountCard;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public java.lang.Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOk) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
            else if (button == jbExpirationDate) {
                actionSetExpirationDate();
            }
        }
    }
}
