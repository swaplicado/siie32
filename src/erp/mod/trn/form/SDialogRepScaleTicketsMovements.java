/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.trn.form;

import com.fasterxml.jackson.databind.ObjectMapper;
import erp.client.SClientInterface;
import erp.data.SDataConstantsSys;
import erp.lib.SLibUtilities;
import erp.mcfg.data.SCfgUtils;
import erp.mod.SModSysConsts;
import erp.mod.cfg.db.SDbMms;
import erp.mod.trn.db.SRepScaleTicketsMovementsConfiguration;
import erp.mod.trn.db.SRepScaleTicketsMovementsGroup;
import erp.mod.trn.db.SRepScaleTicketsMovementsGroupCat;
import erp.mod.trn.db.SRepScaleTicketsMovementsTo;
import erp.mtrn.data.STrnUtilities;
import static erp.mtrn.data.STrnUtilities.getMms;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JButton;
import javax.swing.JDialog;
import sa.lib.SLibTimeUtils;
import sa.lib.SLibUtils;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiFields;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.mail.SMail;
import sa.lib.mail.SMailConsts;
import sa.lib.mail.SMailSender;

/**
 *
 * @author Isabel Servín
 */
public class SDialogRepScaleTicketsMovements extends JDialog implements ActionListener {

    private final SGuiClient miClient;
    private SGuiFields moFields;
    private ObjectMapper moMapper;
    private SMailSender moMailSender;
    
    /**
     * Creates new form SDialogRepScaleTicketsMovements
     * @param client
     * @param subType
     */
    public SDialogRepScaleTicketsMovements(SGuiClient client, int subType) {
        miClient = client;
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlDate = new javax.swing.JLabel();
        moDate = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel6 = new javax.swing.JPanel();
        jlTo = new javax.swing.JLabel();
        moTextTo = new sa.lib.gui.bean.SBeanFieldText();
        jlAddingMultipleMailHelp = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jlCc = new javax.swing.JLabel();
        moTextCc = new sa.lib.gui.bean.SBeanFieldText();
        jlAddingMultipleMailHelp1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jlBcc = new javax.swing.JLabel();
        moTextBcc = new sa.lib.gui.bean.SBeanFieldText();
        jlAddingMultipleMailHelp2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        moBooleanSaveEmails = new sa.lib.gui.bean.SBeanFieldBoolean();
        jPanel4 = new javax.swing.JPanel();
        jbSend = new javax.swing.JButton();
        jbClose = new javax.swing.JButton();

        setTitle("Reporte de boletos de salida de báscula");
        setIconImage(null);
        setIconImages(null);
        setModal(true);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros del reporte:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(6, 0, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDate.setText("Fecha de corte:*");
        jlDate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlDate);
        jPanel3.add(moDate);

        jPanel2.add(jPanel3);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTo.setForeground(new java.awt.Color(0, 102, 102));
        jlTo.setText("Para:*");
        jlTo.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlTo);

        moTextTo.setPreferredSize(new java.awt.Dimension(450, 23));
        jPanel6.add(moTextTo);

        jlAddingMultipleMailHelp.setForeground(new java.awt.Color(109, 109, 109));
        jlAddingMultipleMailHelp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlAddingMultipleMailHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_view_help.png"))); // NOI18N
        jlAddingMultipleMailHelp.setToolTipText("Separar varias cuentas con \";\", sin espacios, p. ej., \"cuenta1@mail.com;cuenta2@mail.com\"");
        jlAddingMultipleMailHelp.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel6.add(jlAddingMultipleMailHelp);

        jPanel2.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCc.setForeground(new java.awt.Color(0, 102, 102));
        jlCc.setText("CC:");
        jlCc.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlCc);

        moTextCc.setPreferredSize(new java.awt.Dimension(450, 23));
        jPanel7.add(moTextCc);

        jlAddingMultipleMailHelp1.setForeground(new java.awt.Color(109, 109, 109));
        jlAddingMultipleMailHelp1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlAddingMultipleMailHelp1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_view_help.png"))); // NOI18N
        jlAddingMultipleMailHelp1.setToolTipText("Separar varias cuentas con \";\", sin espacios, p. ej., \"cuenta1@mail.com;cuenta2@mail.com\"");
        jlAddingMultipleMailHelp1.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel7.add(jlAddingMultipleMailHelp1);

        jPanel2.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBcc.setForeground(new java.awt.Color(0, 102, 102));
        jlBcc.setText("BCC:");
        jlBcc.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlBcc);

        moTextBcc.setPreferredSize(new java.awt.Dimension(450, 23));
        jPanel8.add(moTextBcc);

        jlAddingMultipleMailHelp2.setForeground(new java.awt.Color(109, 109, 109));
        jlAddingMultipleMailHelp2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlAddingMultipleMailHelp2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_view_help.png"))); // NOI18N
        jlAddingMultipleMailHelp2.setToolTipText("Separar varias cuentas con \";\", sin espacios, p. ej., \"cuenta1@mail.com;cuenta2@mail.com\"");
        jlAddingMultipleMailHelp2.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel8.add(jlAddingMultipleMailHelp2);

        jPanel2.add(jPanel8);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBooleanSaveEmails.setSelected(true);
        moBooleanSaveEmails.setText("Guardar destinatarios en la configuración del reporte");
        moBooleanSaveEmails.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel9.add(moBooleanSaveEmails);

        jPanel2.add(jPanel9);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbSend.setText("Enviar");
        jbSend.setPreferredSize(new java.awt.Dimension(80, 23));
        jPanel4.add(jbSend);

        jbClose.setText("Cerrar");
        jbClose.setPreferredSize(new java.awt.Dimension(80, 23));
        jPanel4.add(jbClose);

        getContentPane().add(jPanel4, java.awt.BorderLayout.SOUTH);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jbClose;
    private javax.swing.JButton jbSend;
    private javax.swing.JLabel jlAddingMultipleMailHelp;
    private javax.swing.JLabel jlAddingMultipleMailHelp1;
    private javax.swing.JLabel jlAddingMultipleMailHelp2;
    private javax.swing.JLabel jlBcc;
    private javax.swing.JLabel jlCc;
    private javax.swing.JLabel jlDate;
    private javax.swing.JLabel jlTo;
    private sa.lib.gui.bean.SBeanFieldBoolean moBooleanSaveEmails;
    private sa.lib.gui.bean.SBeanFieldDate moDate;
    private sa.lib.gui.bean.SBeanFieldText moTextBcc;
    private sa.lib.gui.bean.SBeanFieldText moTextCc;
    private sa.lib.gui.bean.SBeanFieldText moTextTo;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 640, 400);
        
        moFields = new SGuiFields();
        moMapper = new ObjectMapper();
        
        moDate.setDateSettings(miClient, SGuiUtils.getLabelName(jlDate.getText()), true);
        moTextTo.setTextSettings(SGuiUtils.getLabelName(jlTo), 500, 1);
        moTextTo.setTextCaseType(0);
        moTextCc.setTextSettings(SGuiUtils.getLabelName(jlCc), 500, 0);
        moTextCc.setTextCaseType(0);
        moTextBcc.setTextSettings(SGuiUtils.getLabelName(jlBcc), 500, 0);
        moTextBcc.setTextCaseType(0);
        moBooleanSaveEmails.setBooleanSettings(moBooleanSaveEmails.getText(), true);
        
        moFields.addField(moDate);
        moFields.addField(moTextTo);
        moFields.addField(moTextCc);
        moFields.addField(moTextBcc);
        moFields.addField(moBooleanSaveEmails);
        
        try {
            String to = SCfgUtils.getParamValue(miClient.getSession().getStatement(), SDataConstantsSys.CFG_PARAM_TRN_MAIL_REP_SCA_TIC_TO);
            SRepScaleTicketsMovementsTo oTo = moMapper.readValue(to, SRepScaleTicketsMovementsTo.class);
            moTextTo.setValue(oTo.getTo());
            moTextCc.setValue(oTo.getCc());
            moTextBcc.setValue(oTo.getBcc());
        }
        catch (Exception e) {
            miClient.showMsgBoxError(e.getMessage());
        }
            
        moDate.setValue(miClient.getSession().getCurrentDate());
        
        SGuiUtils.createActionMap(rootPane, this, "actionClose", "close", KeyEvent.VK_ESCAPE);
        
        jbSend.addActionListener(this);
        jbClose.addActionListener(this);
    }
    
    private void sendMail() {
        try {
            String cfg = SCfgUtils.getParamValue(miClient.getSession().getStatement(), SDataConstantsSys.CFG_PARAM_TRN_MAIL_REP_SCA_TIC_CFG);
            SRepScaleTicketsMovementsConfiguration oCfg = moMapper.readValue(cfg, SRepScaleTicketsMovementsConfiguration.class);
            
            SDbMms mms = getMms((SClientInterface) miClient, SModSysConsts.CFGS_TP_MMS_TRN_EST_REQ);
            String subject = oCfg.getRepTitle().toUpperCase();
            String body = composeBody(oCfg);
            
            moMailSender = new SMailSender(mms.getHost(), mms.getPort(), mms.getProtocol(), mms.isStartTls(), mms.isAuth(), mms.getUser(), mms.getUserPassword(), mms.getUser());
            moMailSender.setMailReplyTo(mms.getXtaMailReplyTo());
            
            ArrayList<String> toRecipients = new ArrayList<>(Arrays.asList(SLibUtils.textExplode(moTextTo.getValue().toLowerCase(), ";")));
            ArrayList<String> toCcRecipients = moTextCc.getValue().isEmpty() ? new ArrayList<>() : new ArrayList<>(Arrays.asList(SLibUtils.textExplode(moTextCc.getValue().toLowerCase(), ";")));
            ArrayList<String> toBccRecipients = moTextBcc.getValue().isEmpty() ? new ArrayList<>() : new ArrayList<>(Arrays.asList(SLibUtils.textExplode(moTextBcc.getValue().toLowerCase(), ";")));
            SMail mail = new SMail(moMailSender, subject, body, toRecipients, toCcRecipients, toBccRecipients);
            if (new File("src/erp/img/aeth-logo.png").exists()) {
                mail.getInlineImages().put("aeth-logo", "src/erp/img/aeth-logo.png");
            }        
            mail.setContentType(SMailConsts.CONT_TP_TEXT_HTML);
            mail.send();
            
            miClient.showMsgBoxInformation("El correo-e ha sido enviado.");
        }
        catch (Exception e) {
            miClient.showMsgBoxError(e.getMessage());
        }
    }
    
    private String composeBody(SRepScaleTicketsMovementsConfiguration oCfg) throws Exception {
        String sql;
        String companies = "";
        ResultSet resultSet;
        
        for (int id : oCfg.getRepCompanies()) {
            companies += (companies.isEmpty() ? "" : ", ") + id;
        }

        String grp = SCfgUtils.getParamValue(miClient.getSession().getStatement(), SDataConstantsSys.CFG_PARAM_TRN_MAIL_REP_SCA_TIC_GRP);
        SRepScaleTicketsMovementsGroup oGrp = moMapper.readValue(grp, SRepScaleTicketsMovementsGroup.class);

        int[] yearMonth = SLibTimeUtils.digestMonth(moDate.getValue());
        int year = yearMonth[0];
        int month = yearMonth[1];
        String monthName = getMonthName(month);
        boolean tri2 = month >= 4;
        boolean tri3 = month >= 7;
        boolean tri4 = month >= 10;
        
        double totalAethMes = 0;
        double totalAethTri1 = 0;
        double totalAethTri2 = 0;
        double totalAethTri3 = 0;
        double totalAethTri4 = 0;
        double totalAethAnio = 0;
        double totalMaqMes = 0;
        double totalMaqTri1 = 0;
        double totalMaqTri2 = 0;
        double totalMaqTri3 = 0;
        double totalMaqTri4 = 0;
        double totalMaqAnio = 0;
        
        String html = "<html>" +
                "<head>" ;
        html += "<style> "
                + "body {"
                + " font-size: 100%;"
                + "} "
                + "h1 {"
                + " font-size: 2.00em;"
                + " font-family: sans-serif;"
                + "} "
                + "h2 {"
                + " font-size: 1.75em;"
                + " font-family: sans-serif;"
                + "} "
                + "h3 {"
                + " font-size: 1.50em;"
                + " font-family: sans-serif;"
                + "} "
                + "h4 {"
                + " font-size: 1.25em;"
                + " font-family: sans-serif;"
                + "} "
                + "p {"
                + " font-size: 0.875em;"
                + " font-family: sans-serif;"
                + "} "
                + "table {"
                + " font-size: 1.0em;"
                + " font-family: sans-serif;"
                + "} "
                + "th, td {"
                //+ " border: 1px solid black;"
                + " border-collapse: collapse;"
                + "padding-left: 5px; padding-right: 5px;"
                + "vertical-align: top;"
                + "border: 0;"
                + "} "
                + "th {"
                + " text-align: left;"
                + " background-color: DeepSkyBlue;"
                + " color: white;" 
                + "} "
                + ".sinBorde table{border: 0; border-bottom:1px solid #000}"
                + "</style> ";
        html += "</head>" +
                "<body>" +
                "<font size='3'>" +
                "<b>" +
                "<img src='cid:aeth-logo' width='85' height='25'>&nbsp;&nbsp;" +
                oCfg.getRepTitle() + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + oCfg.getDocNumber() + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + monthName.toLowerCase() + ", " + year  +
                "</b>" +
                "<hr>"; 
        
        html += "<table border='1' bordercolor='#000000' cellpadding='0' cellspacing='0'>" + 
                "<font size='1'>" + 
                "<tr>" +
                "<th align='left'><b>" + SLibUtils.textToHtml("SEGMENTO") + "</b></th>" + 
                "<th align='left'><b>" + SLibUtils.textToHtml("FAMILIA") + "</b></th>" + 
                "<th align='left'><b>" + SLibUtils.textToHtml("PRODUCTO") + "</b></th>" +
                "<th align='left'><b>" + SLibUtils.textToHtml("TOTAL " + monthName.toUpperCase()) + "</b></th>" +
                "<th style='border-left: 1px; width: 75px' align='left'><b>" + SLibUtils.textToHtml("ACUMULADO TRIMESTRE 1") + "</b></th>" +
                (tri2 ? "<th style='width: 75px' align='left'><b>" + SLibUtils.textToHtml("ACUMULADO TRIMESTRE 2") + "</b></th>" : "") +
                (tri3 ? "<th style='width: 75px' align='left'><b>" + SLibUtils.textToHtml("ACUMULADO TRIMESTRE 3") + "</b></th>" : "") +
                (tri4 ? "<th style='width: 75px' align='left'><b>" + SLibUtils.textToHtml("ACUMULADO TRIMESTRE 4") + "</b></th>" : "") +
                "<th style='border-left: 1px; width: 75px' align='left'><b>" + SLibUtils.textToHtml("ACUMULADO ANUAL") + "</b></th>" +
                "</tr>";
        
        int rowTable = 0;
        for (SRepScaleTicketsMovementsGroupCat cat : oGrp.getCat()) {
            String[] include = getSqlInc(cat.getInc());
            String exclude = cat.getExc() == null ? "" : getSqlExc(cat.getExc());
            double totalCatMes = 0;
            double totalCatTri1 = 0;
            double totalCatTri2 = 0;
            double totalCatTri3 = 0;
            double totalCatTri4 = 0;
            double totalCatAnio = 0;
            
            boolean hasCat = false;
            sql = "SELECT '" + cat.getNom() + "' cat, i.id_item, COALESCE(si.name, i.item) item, " +
                    "SUM(IF(MONTH(t.dt) = " + month + ", t.wei_net_r, 0)) mes, " +
                    "SUM(IF(MONTH(t.dt) BETWEEN 1 AND 3, t.wei_net_r, 0)) tri_1, " +
                    "SUM(IF(MONTH(t.dt) BETWEEN 4 AND 6, t.wei_net_r, 0)) tri_2, " +
                    "SUM(IF(MONTH(t.dt) BETWEEN 7 AND 9, t.wei_net_r, 0)) tri_3, " +
                    "SUM(IF(MONTH(t.dt) BETWEEN 10 AND 12, t.wei_net_r, 0)) tri_4, " +
                    "SUM(t.wei_net_r) anual " +
                    "FROM erp.trnu_sca_tic t " +
                    "INNER JOIN erp.itmu_item i ON t.fk_item = i.id_item " +
                    "INNER JOIN erp.itmu_igen ig ON i.fid_igen = ig.id_igen " +
                    "INNER JOIN erp.itmu_igrp igr ON ig.fid_igrp = igr.id_igrp " +
                    "LEFT JOIN erp.itmu_sca_item_map sim ON t.fk_item = sim.id_item AND sim.b_def " +
                    "LEFT JOIN erp.itmu_sca_item si ON sim.id_sca = si.id_sca AND sim.id_sca_item = si.id_sca_item " +
                    "WHERE YEAR(t.dt) = " + year + " AND t.dt <= '" + SLibUtils.DbmsDateFormatDate.format(moDate.getValue()) + "' " +
                    "AND t.fk_co IN (" + companies + ") " +
                    "AND t.fk_ct_iog = " + SDataConstantsSys.TRNS_CT_IOG_OUT + " " +
                    "AND t.tic_case = 'VTA' " +
                    include[0] + " " +
                    exclude + " " +
                    "GROUP BY " + include[1] + ", i.id_item " +
                    "ORDER BY item";
            resultSet = miClient.getSession().getStatement().executeQuery(sql);
            
            int rowCat = 0;
            while (resultSet.next()) {
                if (resultSet.getDouble("mes") != 0.0) {
                    rowTable++;
                    rowCat++;
                    hasCat = true;
                    html += "<tr>" + 
                            "<td style='background-color: LightCyan'><b>" + (rowTable == 1 ? SLibUtils.textToHtml("AETH") : "") + "</b></td>" +
                            "<td><b>" + SLibUtils.textToHtml(rowCat == 1 ? resultSet.getString("cat") : "") + "</b></td>" +
                            "<td>" + SLibUtils.textToHtml(resultSet.getString("item")) + "</td>" +
                            "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("mes"))) + "</td>" +
                            "<td style='border-left: 1px' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("tri_1"))) + "</td>" +
                            (tri2 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("tri_2"))) + "</td>" : "") +
                            (tri3 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("tri_3"))) + "</td>" : "") +
                            (tri4 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("tri_4"))) + "</td>" : "") +
                            "<td style='border-left: 1px' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("anual"))) + "</td>" +
                            "</tr>";
                }
                totalCatMes += resultSet.getDouble("mes");
                totalCatTri1 += resultSet.getDouble("tri_1");
                totalCatTri2 += resultSet.getDouble("tri_2");
                totalCatTri3 += resultSet.getDouble("tri_3");
                totalCatTri4 += resultSet.getDouble("tri_4");
                totalCatAnio += resultSet.getDouble("anual");
            }
            if (hasCat) {
                html += "<tr>" + 
                        "<b><td style='background-color: LightCyan'></td>" +
                        "<td colspan='2' style='background-color: LemonChiffon'>" + SLibUtils.textToHtml("TOTAL " + cat.getNom()) + "</td>" +
                        "<td style='background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalCatMes)) + "</td>" +
                        "<td style='border-left: 1px; background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalCatTri1)) + "</td>" +
                        (tri2 ? "<td style='background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalCatTri2)) + "</td>" : "") +
                        (tri3 ? "<td style='background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalCatTri3)) + "</td>" : "") +
                        (tri4 ? "<td style='background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalCatTri4)) + "</td>" : "") +
                        "<td style='border-left: 1px; background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalCatAnio)) + "</td>" +
                        "</b></tr>";
            }
            totalAethMes += totalCatMes;
            totalAethTri1 += totalCatTri1;
            totalAethTri2 += totalCatTri2;
            totalAethTri3 += totalCatTri3;
            totalAethTri4 += totalCatTri4;
            totalAethAnio += totalCatAnio;
        }
        html += "<tr style='background-color: Yellow'>" + 
                "<b>" +
                "<td colspan='3'>" + SLibUtils.textToHtml("TOTAL AETH") + "</td>" +
                "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethMes)) + "</td>" +
                "<td style='border-left: 1px' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethTri1)) + "</td>" +
                (tri2 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethTri2)) + "</td>" : "") +
                (tri3 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethTri3)) + "</td>" : "") +
                (tri4 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethTri4)) + "</td>" : "") +
                "<td style='border-left: 1px' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethAnio)) + "</td>" +
                "</b></tr>";
        
        // CONSULTA MAQUILA
        boolean hasMaq = false;
        sql = "SELECT i.id_item, COALESCE(si.name, i.item) item, b.bp, " +
                "SUM(IF(MONTH(t.dt) = " + month + ", t.wei_net_r, 0)) mes, " +
                "SUM(IF(MONTH(t.dt) BETWEEN 1 AND 3, t.wei_net_r, 0)) tri_1, " +
                "SUM(IF(MONTH(t.dt) BETWEEN 4 AND 6, t.wei_net_r, 0)) tri_2, " +
                "SUM(IF(MONTH(t.dt) BETWEEN 7 AND 9, t.wei_net_r, 0)) tri_3, " +
                "SUM(IF(MONTH(t.dt) BETWEEN 10 AND 12, t.wei_net_r, 0)) tri_4, " +
                "SUM(t.wei_net_r) anual " +
                "FROM erp.trnu_sca_tic t " +
                "INNER JOIN erp.itmu_item i ON t.fk_item = i.id_item " +
                "INNER JOIN erp.itmu_igen ig ON i.fid_igen = ig.id_igen " +
                "INNER JOIN erp.itmu_igrp igr ON ig.fid_igrp = igr.id_igrp " +
                "INNER JOIN erp.bpsu_bp b ON t.fk_bp = b.id_bp " +
                "LEFT JOIN erp.itmu_sca_item_map sim ON t.fk_item = sim.id_item AND sim.b_def " +
                "LEFT JOIN erp.itmu_sca_item si ON sim.id_sca = si.id_sca AND sim.id_sca_item = si.id_sca_item " +
                "WHERE YEAR(t.dt) = " + year + " AND t.dt <= '" + SLibUtils.DbmsDateFormatDate.format(moDate.getValue()) + "' " +
                "AND t.fk_co IN (" + companies + ") " +
                "AND t.fk_ct_iog = " + SDataConstantsSys.TRNS_CT_IOG_OUT + " " +
                "AND t.tic_case <> 'VTA' " +
                "GROUP BY i.id_item " +
                "ORDER BY item;";
        resultSet = miClient.getSession().getStatement().executeQuery(sql);
        
        while (resultSet.next()) {
            if (resultSet.getDouble("mes") != 0.0) {
                hasMaq = true;
                html += "<tr>" + 
                        "<td style='background-color: LightCyan'><b>" + SLibUtils.textToHtml(resultSet.isFirst() ? "MAQUILAS" : "") + "</b></td>" +
                        "<td><b>" + SLibUtils.textToHtml(resultSet.isFirst() ? "MAQUILA" : "") + "</b></td>" +
                        "<td>" + SLibUtils.textToHtml(resultSet.getString("item") + " " + resultSet.getString("bp")) + "</td>" +
                        "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("mes"))) + "</td>" +
                        "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("tri_1"))) + "</td>" +
                        (tri2 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("tri_2"))) + "</td>" : "") +
                        (tri3 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("tri_3"))) + "</td>" : "") +
                        (tri4 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("tri_4"))) + "</td>" : "") +
                        "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(resultSet.getDouble("anual"))) + "</td>" +
                        "</tr>";
                
                totalMaqMes += resultSet.getDouble("mes");
                totalMaqTri1 += resultSet.getDouble("tri_1");
                totalMaqTri2 += resultSet.getDouble("tri_2");
                totalMaqTri3 += resultSet.getDouble("tri_3");
                totalMaqTri4 += resultSet.getDouble("tri_4");
                totalMaqAnio += resultSet.getDouble("anual");
            }
        }
        if (hasMaq) {
            html += "<tr>" +
                    "<b>" +
                    "<td style='background-color: LightCyan'></td>" +
                    "<td style='background-color: LemonChiffon' colspan='2'>TOTAL MAQUILA</td>" +
                    "<td style='background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqMes)) + "</td>" +
                    "<td style='border-left: 1px; background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqTri1)) + "</td>" +
                    (tri2 ? "<td style='background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqTri2)) + "</td>" : "") +
                    (tri3 ? "<td style='background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqTri3)) + "</td>" : "") +
                    (tri4 ? "<td style='background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqTri4)) + "</td>" : "") +
                    "<td style='border-left: 1px; background-color: LemonChiffon' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqAnio)) + "</td>" +
                    "</b>"+
                    "</tr>";
            
            html += "<tr style='background-color: Yellow'>" + 
                    "<b>" +
                    "<td colspan='3'>" + SLibUtils.textToHtml("TOTAL MAQUILAS") + "</td>" +
                    "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqMes)) + "</td>" +
                    "<td style='border-left: 1px' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqTri1)) + "</td>" +
                    (tri2 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqTri2)) + "</td>" : "") +
                    (tri3 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqTri3)) + "</td>" : "") +
                    (tri4 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqTri4)) + "</td>" : "") +
                    "<td style='border-left: 1px' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalMaqAnio)) + "</td>" +
                    "</b></tr>";
        }
        
        html += "<tr>" + 
                "<b>" +
                "<td colspan='3'>" + SLibUtils.textToHtml("TOTAL GENERAL") + "</td>" +
                "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethMes + totalMaqMes)) + "</td>" +
                "<td style='border-left: 1px' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethTri1 + totalMaqTri1)) + "</td>" +
                (tri2 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethTri2 + totalMaqTri2)) + "</td>" : "") +
                (tri3 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethTri3 + totalMaqTri3)) + "</td>" : "") +
                (tri4 ? "<td align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethTri4 + totalMaqTri4)) + "</td>" : "") +
                "<td style='border-left: 1px' align='right'>" + SLibUtils.textToHtml(SLibUtils.DecimalFormatValue0D.format(totalAethAnio + totalMaqAnio)) + "</td>" +
                "</b></tr>";
        html += "</table>";
        html += "<br>" +
                "<hr>" +
                STrnUtilities.composeMailFooter("warning") +
                "</body></html>" +
                "</html>";
        return html;   
    }
    
    /**
     * Devuelve un arreglo de Strings de 3 pocisiones
     * 1. La parte del WHERE
     * 2. La parte del GROUP BY
     */
    @SuppressWarnings("unchecked")
    private String[] getSqlInc(ArrayList<Object> inc) throws Exception {
        String sql[] = new String[2];
        String in = "";
        
        for (int id : (ArrayList<Integer>)inc.get(1)) {
            in += (in.isEmpty() ? "" : ", ") + id;
        }
        
        if(!in.isEmpty()){
        
            switch ((String) inc.get(0)) {
                case "GRP":
                    sql[0] = "AND igr.id_igrp IN (" + in + ")";
                    sql[1] = "igr.id_igrp";
                    break;
                case "GEN":
                    sql[0] = "AND ig.id_gen IN (" + in + ")";
                    sql[1] = "ig.id_gen";
                    break;
                case "ITM":
                    sql[0] = "AND i.id_item IN (" + in + ")";
                    sql[1] = "i.id_item";
                    break;
                default:
                    throw new Exception("Configuración erronea en el en en parámetro TRN_MAIL_REP_SCA_TIC_GRP, "
                            + "por el momento solo son aceptados GRP, GEN e ITM.\nContactar a soporte.");
            }
        }
        else {
            throw new Exception("No se definió ningún id en el include en el parámetro de configuración TRN_MAIL_REP_SCA_TIC_GRP.\nContactar a soporte.");
        }
        
        return sql;
    }
    
    @SuppressWarnings("unchecked")
    private String getSqlExc(ArrayList<Object> exc) throws Exception {
        String sql = "";
        String ex = "";
        
        for (int id : (ArrayList<Integer>)exc.get(1)) {
            ex += (ex.isEmpty() ? "" : ", ") + id;
        }

        if(!ex.isEmpty()){

            switch ((String) exc.get(0)) {
                case "GRP":
                    sql = "AND igr.id_igrp NOT IN (" + ex + ")";
                    break;
                case "GEN":
                    sql = "AND ig.id_gen NOT IN (" + ex + ")";
                    break;
                case "ITM":
                    sql = "AND i.id_item NOT IN (" + ex + ")";
                    break;
                default:
                    throw new Exception("Configuración erronea en el en en parámetro TRN_MAIL_REP_SCA_TIC_GRP, "
                            + "por el momento solo son aceptados GRP, GEN e ITM.\nContactar a soporte.");
            }
        }
        else {
            throw new Exception("No se definió ningún id en el exclude en el parámetro de configuración TRN_MAIL_REP_SCA_TIC_GRP.\nContactar a soporte.");
        }
        
        return sql;
    }
    
    private String getMonthName(int mes) {
        String nombre = "";
        switch (mes){
            case 1: nombre = "Enero"; break;
            case 2: nombre = "Febrero"; break;
            case 3: nombre = "Marzo"; break;
            case 4: nombre = "Abril"; break;
            case 5: nombre = "Mayo"; break;
            case 6: nombre = "Junio"; break;
            case 7: nombre = "Julio"; break;
            case 8: nombre = "Agosto"; break;
            case 9: nombre = "Septiembre"; break;
            case 10: nombre = "Octubre"; break;
            case 11: nombre = "Noviembre"; break;
            case 12: nombre = "Diciembre"; break;
        }
        return nombre;
    }
    
    private SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();
        
        if (validation.isValid()) {
            if (!SLibUtilities.validateEmails(moTextTo.getValue())){
                validation.setMessage("Uno o más correos en el campo 'Para' no son válidos.");
                validateForm().setComponent(moTextTo);
            }

            if (!moTextCc.getValue().isEmpty()) {
                if (!SLibUtilities.validateEmails(moTextCc.getValue())){
                    validation.setMessage("Uno o más correos en el campo 'CC' no son válidos.");
                    validateForm().setComponent(moTextCc);
                }
            }

            if (!moTextBcc.getValue().isEmpty()) {
                if (!SLibUtilities.validateEmails(moTextBcc.getValue())){
                    validation.setMessage("Uno o más correos en el campo 'BCC' no son válidos.");
                    validateForm().setComponent(moTextBcc);
                }
            }
            
            if (validation.isValid() && moBooleanSaveEmails.isSelected()) {
                if (moTextTo.getValue().length() + moTextCc.getValue().length() + moTextBcc.getValue().length() > 500) {
                    validation.setMessage("El número de caracteres en conjunto para los tres campos de correo no debe pasar de los 500.\n"
                            + "Borre destinatarios o deseleccione la casilla de \"Guardar destinatarios en la configuración del reporte\"");
                }
            }
        }
        return validation;
    }
    
    private void actionSend() {
        SGuiValidation validation = validateForm();
        if (validation.isValid()) {
            sendMail();
            saveMails();
            this.setVisible(false);
        }
        else {
            miClient.showMsgBoxWarning(validation.getMessage());
            validation.getComponent().requestFocus();
        }
    }
    
    private void saveMails() {
        try {
            if (moBooleanSaveEmails.isSelected()) {
                String json = "{ \"to\":\"" + moTextTo.getValue().toLowerCase() + "\", \"cc\":\"" + 
                        moTextCc.getValue().toLowerCase() + "\", \"bcc\":\"" + moTextBcc.getValue().toLowerCase() + "\"}";
                String sql = "UPDATE cfg_param SET param_value = '" + json + "' WHERE param_key = '" + SDataConstantsSys.CFG_PARAM_TRN_MAIL_REP_SCA_TIC_TO + "'";
                miClient.getSession().getStatement().execute(sql);
            }
        }
        catch (Exception e) {
            miClient.showMsgBoxError("Error al actualizar la lista de emails.");
        }
    }
    
    public void actionClose() {
        this.setVisible(false);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            JButton button = (JButton) e.getSource();
            
            if (button == jbSend) {
                actionSend();
            }
            else if (button == jbClose) {
                actionClose();
            }
        }
    }
}
