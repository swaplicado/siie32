/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.trn.form;

import erp.data.SDataConstantsSys;
import erp.gui.account.SAccount;
import erp.gui.account.SAccountConsts;
import erp.lib.SLibConstants;
import erp.mod.SModConsts;
import erp.mod.trn.db.SDbMaterialConsumptionSubentity;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;

/**
 *
 * @author Isabel Servín
 * 
 */
public class SFormMaterialConsumptionSubentity extends sa.lib.gui.bean.SBeanForm {

    private SDbMaterialConsumptionSubentity moRegistry;
    
    /**
     * Creates new form SFormMaterialConsumptionEntity
     * @param client
     * @param title
     */
    public SFormMaterialConsumptionSubentity(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.TRN_MAT_CONS_SUBENT, SLibConstants.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jlConsumptionEntity = new javax.swing.JLabel();
        moKeyConsEntEty = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel24 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel21 = new javax.swing.JPanel();
        jlConsumptionSubentity = new javax.swing.JLabel();
        moTextConsumptionSubentity = new sa.lib.gui.bean.SBeanFieldText();
        jPanel25 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        moPanelAccountConsWah = new erp.gui.account.SBeanPanelAccount();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        moPanelAccountFixedActive = new erp.gui.account.SBeanPanelAccount();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setPreferredSize(new java.awt.Dimension(750, 450));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel23.setLayout(new java.awt.GridLayout(4, 1, 0, 5));

        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlConsumptionEntity.setText("Centro de consumo:*");
        jlConsumptionEntity.setPreferredSize(new java.awt.Dimension(140, 23));
        jPanel22.add(jlConsumptionEntity);

        moKeyConsEntEty.setPreferredSize(new java.awt.Dimension(350, 23));
        jPanel22.add(moKeyConsEntEty);

        jPanel23.add(jPanel22);

        jPanel24.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:");
        jlCode.setPreferredSize(new java.awt.Dimension(140, 23));
        jPanel24.add(jlCode);
        jPanel24.add(moTextCode);

        jPanel23.add(jPanel24);

        jPanel21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlConsumptionSubentity.setText("Subcentro de consumo:*");
        jlConsumptionSubentity.setPreferredSize(new java.awt.Dimension(140, 23));
        jPanel21.add(jlConsumptionSubentity);

        moTextConsumptionSubentity.setPreferredSize(new java.awt.Dimension(350, 23));
        jPanel21.add(moTextConsumptionSubentity);

        jPanel23.add(jPanel21);

        jPanel25.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel23.add(jPanel25);

        jPanel1.add(jPanel23, java.awt.BorderLayout.NORTH);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.GridLayout(2, 0));

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("Cuenta contable para contabilizar consumos de almacén:*");
        jPanel5.add(jLabel1);

        jPanel2.add(jPanel5, java.awt.BorderLayout.PAGE_START);
        jPanel2.add(moPanelAccountConsWah, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel2);

        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel2.setText("Cuenta contable para contabilizar adquisiciones de activo fijo:*");
        jPanel8.add(jLabel2);

        jPanel7.add(jPanel8, java.awt.BorderLayout.PAGE_START);
        jPanel7.add(moPanelAccountFixedActive, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel7);

        jPanel6.add(jPanel4, java.awt.BorderLayout.NORTH);

        jPanel1.add(jPanel6, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlConsumptionEntity;
    private javax.swing.JLabel jlConsumptionSubentity;
    private sa.lib.gui.bean.SBeanFieldKey moKeyConsEntEty;
    private erp.gui.account.SBeanPanelAccount moPanelAccountConsWah;
    private erp.gui.account.SBeanPanelAccount moPanelAccountFixedActive;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextConsumptionSubentity;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 800, 500);
        
        moKeyConsEntEty.setKeySettings(miClient, SGuiUtils.getLabelName(jlConsumptionEntity), true);
        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode), 10);
        moTextConsumptionSubentity.setTextSettings(SGuiUtils.getLabelName(jlConsumptionSubentity), 255, 1);
        moPanelAccountConsWah.setPanelSettings((SGuiClient) miClient, SAccountConsts.TYPE_ACCOUNT, true, true, true);
        moPanelAccountFixedActive.setPanelSettings((SGuiClient) miClient, SAccountConsts.TYPE_ACCOUNT, true, true, true);
        
        moPanelAccountConsWah.setAccountNameWidth(500);
        moPanelAccountConsWah.initPanel();
        moPanelAccountFixedActive.setAccountNameWidth(500);
        moPanelAccountFixedActive.initPanel();
        
        moFields.addField(moKeyConsEntEty);
        moFields.addField(moTextCode);
        moFields.addField(moTextConsumptionSubentity);
        
        moFields.setFormButton(jbSave);
    }
    
    @Override
    public void addAllListeners() {
        
    }

    @Override
    public void removeAllListeners() {
        
    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyConsEntEty, SModConsts.TRN_MAT_CONS_ENT, SLibConsts.UNDEFINED, null);
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbMaterialConsumptionSubentity) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moKeyConsEntEty.setValue(new int[] { moRegistry.getPkMatConsumptionEntityId() });
        moTextCode.setValue(moRegistry.getCode());
        moTextConsumptionSubentity.setValue(moRegistry.getName());
        
        moPanelAccountConsWah.setSelectedAccount(new SAccount(moRegistry.getFkAccountConsumptionWarehouseId(), (String) miClient.getSession().readField(SModConsts.FIN_ACC, new int[] { moRegistry.getFkAccountConsumptionWarehouseId() }, SDbRegistry.FIELD_CODE), "", false, 0, 0));
        moPanelAccountFixedActive.setSelectedAccount(new SAccount(moRegistry.getFkAccountFixedAssetId(), (String) miClient.getSession().readField(SModConsts.FIN_ACC, new int[] { moRegistry.getFkAccountFixedAssetId() }, SDbRegistry.FIELD_CODE), "", false, 0, 0));
        
        setFormEditable(true);

        if (moRegistry.isRegistryNew()) { }

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbMaterialConsumptionSubentity registry = (SDbMaterialConsumptionSubentity) moRegistry.clone();

        if (registry.isRegistryNew()) {}
        
        moRegistry.setPkMatConsumptionEntityId(moKeyConsEntEty.getValue()[0]);
        moRegistry.setCode(moTextCode.getValue());
        moRegistry.setName(moTextConsumptionSubentity.getValue());
        moRegistry.setFkAccountConsumptionWarehouseId(moPanelAccountConsWah.getSelectedAccount() != null ? moPanelAccountConsWah.getSelectedAccount().getAccountId() : SDataConstantsSys.NA);
        moRegistry.setFkAccountFixedAssetId(moPanelAccountFixedActive.getSelectedAccount() != null ? moPanelAccountFixedActive.getSelectedAccount().getAccountId() : SDataConstantsSys.NA);
        
        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();
        
        if (validation.isValid()) {
            validation = moPanelAccountConsWah.validatePanel();
        }
        if (validation.isValid()) {
            validation = moPanelAccountFixedActive.validatePanel();
        }
        
        return validation;
    }
}
