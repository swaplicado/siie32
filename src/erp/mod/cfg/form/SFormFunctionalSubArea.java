/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.cfg.form;

import erp.mod.SModConsts;
import erp.mod.cfg.db.SDbFunctionalSubArea;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;

/**
 *
 * @author Sergio Flores
 */
public class SFormFunctionalSubArea extends SBeanForm implements ActionListener {

    private SDbFunctionalSubArea moRegistry;

    /**
     * Creates new form SFormFunctionalArea
     * @param client
     * @param title
     */
    public SFormFunctionalSubArea(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.CFGU_FUNC_SUB, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jlFunctionalArea = new javax.swing.JLabel();
        moKeyFunctionalArea = new sa.lib.gui.bean.SBeanFieldKey();
        jbModifyFunctionalArea = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel5 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(4, 1, 0, 5));

        jPanel28.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFunctionalArea.setText("Área funcional:*");
        jlFunctionalArea.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel28.add(jlFunctionalArea);

        moKeyFunctionalArea.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel28.add(moKeyFunctionalArea);

        jbModifyFunctionalArea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_edit.gif"))); // NOI18N
        jbModifyFunctionalArea.setToolTipText("Modificar");
        jbModifyFunctionalArea.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel28.add(jbModifyFunctionalArea);

        jPanel2.add(jPanel28);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:*");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlCode);
        jPanel4.add(moTextCode);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlName);

        moTextName.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel5.add(moTextName);

        jPanel2.add(jPanel5);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton jbModifyFunctionalArea;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlFunctionalArea;
    private javax.swing.JLabel jlName;
    private sa.lib.gui.bean.SBeanFieldKey moKeyFunctionalArea;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);

        moKeyFunctionalArea.setKeySettings(miClient, SGuiUtils.getLabelName(jlFunctionalArea), true);
        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode), 10);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlName), 50);

        moFields.addField(moKeyFunctionalArea);
        moFields.addField(moTextCode);
        moFields.addField(moTextName);

        moFields.setFormButton(jbSave);
    }
    
    private void actionPerformedModifyFunctionalArea() {
        moKeyFunctionalArea.setEditable(true);
        moKeyFunctionalArea.requestFocusInWindow();
        jbModifyFunctionalArea.setEnabled(false);
    }

    @Override
    public void addAllListeners() {
        jbModifyFunctionalArea.addActionListener(this);
    }

    @Override
    public void removeAllListeners() {
        jbModifyFunctionalArea.removeActionListener(this);
    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyFunctionalArea, SModConsts.CFGU_FUNC, 0, null);
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbFunctionalSubArea) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            moRegistry.setSystem(false);    // all editable registries are non-system
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moKeyFunctionalArea.setValue(new int[] { moRegistry.getFkFunctionalAreaId() });
        moTextCode.setValue(moRegistry.getCode());
        moTextName.setValue(moRegistry.getName());

        setFormEditable(true);
        
        if (moRegistry.isRegistryNew()) {
            jbModifyFunctionalArea.setEnabled(false);
        }
        else {
            moKeyFunctionalArea.setEditable(false);
            jbModifyFunctionalArea.setEnabled(true);
        }

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbFunctionalSubArea registry = moRegistry.clone();

        if (registry.isRegistryNew()) { }

        registry.setCode(moTextCode.getValue());
        registry.setName(moTextName.getValue());
        registry.setFkFunctionalAreaId(moKeyFunctionalArea.getValue()[0]);

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        return validation;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            JButton button = (JButton) e.getSource();
            
            if (button == jbModifyFunctionalArea) {
                actionPerformedModifyFunctionalArea();
            }
        }
    }
}
