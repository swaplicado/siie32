/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.log.form;

import erp.cfd.SCfdXmlCatalogs;
import erp.data.SDataConstantsSys;
import erp.gui.session.SSessionCustom;
import erp.lib.SLibConstants;
import erp.mod.SModConsts;
import erp.mod.log.db.SDbVehicle;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;

/**
 *
 * @author Néstor Ávalos, Isabel Servín
 */
public class SFormVehicle extends sa.lib.gui.bean.SBeanForm {

    private SDbVehicle moRegistry;
    
    /**
     * Creates new form SFormVehicle
     * @param client
     * @param title
     */
    public SFormVehicle(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.LOG_VEH, SLibConstants.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jlVehicleType = new javax.swing.JLabel();
        moKeyVehicleType = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel22 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel24 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel31 = new javax.swing.JPanel();
        jlPlate = new javax.swing.JLabel();
        moPlate = new sa.lib.gui.bean.SBeanFieldText();
        jPanel25 = new javax.swing.JPanel();
        jlYear = new javax.swing.JLabel();
        moYear = new sa.lib.gui.bean.SBeanFieldText();
        jPanel32 = new javax.swing.JPanel();
        jlWei = new javax.swing.JLabel();
        moDecimalWeight = new sa.lib.gui.bean.SBeanFieldDecimal();
        jlWei1 = new javax.swing.JLabel();
        jPanel27 = new javax.swing.JPanel();
        jlVehicleConfiguration = new javax.swing.JLabel();
        moKeyVehicleConfiguration = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel26 = new javax.swing.JPanel();
        jlPermissonType = new javax.swing.JLabel();
        moKeyPermissonType = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel28 = new javax.swing.JPanel();
        jlNumberPermisson = new javax.swing.JLabel();
        moNumberPermisson = new sa.lib.gui.bean.SBeanFieldText();
        jPanel30 = new javax.swing.JPanel();
        jlInsurancePolicy = new javax.swing.JLabel();
        moInsurancePolicy = new sa.lib.gui.bean.SBeanFieldText();
        jPanel29 = new javax.swing.JPanel();
        jlInsurer = new javax.swing.JLabel();
        moKeyInsurer = new sa.lib.gui.bean.SBeanFieldKey();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel23.setLayout(new java.awt.GridLayout(12, 1, 0, 5));

        jPanel21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlVehicleType.setText("Tipo vehículo:*");
        jlVehicleType.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel21.add(jlVehicleType);

        moKeyVehicleType.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel21.add(moKeyVehicleType);

        jPanel23.add(jPanel21);

        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:*");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel22.add(jlCode);
        jPanel22.add(moTextCode);

        jPanel23.add(jPanel22);

        jPanel24.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel24.add(jlName);

        moTextName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel24.add(moTextName);

        jPanel23.add(jPanel24);

        jPanel31.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPlate.setText("Placa:*");
        jlPlate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel31.add(jlPlate);
        jPanel31.add(moPlate);

        jPanel23.add(jPanel31);

        jPanel25.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlYear.setText("Año:*");
        jlYear.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel25.add(jlYear);
        jPanel25.add(moYear);

        jPanel23.add(jPanel25);

        jPanel32.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlWei.setText("Peso bruto:*");
        jlWei.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel32.add(jlWei);
        jPanel32.add(moDecimalWeight);

        jlWei1.setText("ton");
        jlWei1.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel32.add(jlWei1);

        jPanel23.add(jPanel32);

        jPanel27.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlVehicleConfiguration.setText("Conf. vehicular:");
        jlVehicleConfiguration.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel27.add(jlVehicleConfiguration);

        moKeyVehicleConfiguration.setPreferredSize(new java.awt.Dimension(500, 23));
        jPanel27.add(moKeyVehicleConfiguration);

        jPanel23.add(jPanel27);

        jPanel26.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPermissonType.setText("Tipo permiso SCT:");
        jlPermissonType.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel26.add(jlPermissonType);

        moKeyPermissonType.setPreferredSize(new java.awt.Dimension(500, 23));
        jPanel26.add(moKeyPermissonType);

        jPanel23.add(jPanel26);

        jPanel28.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlNumberPermisson.setText("Número permiso:");
        jlNumberPermisson.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel28.add(jlNumberPermisson);

        moNumberPermisson.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel28.add(moNumberPermisson);

        jPanel23.add(jPanel28);

        jPanel30.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlInsurancePolicy.setText("Póliza de seguro:");
        jlInsurancePolicy.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel30.add(jlInsurancePolicy);

        moInsurancePolicy.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel30.add(moInsurancePolicy);

        jPanel23.add(jPanel30);

        jPanel29.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlInsurer.setText("Aseguradora:");
        jlInsurer.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel29.add(jlInsurer);

        moKeyInsurer.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel29.add(moKeyInsurer);

        jPanel23.add(jPanel29);

        jPanel1.add(jPanel23, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlInsurancePolicy;
    private javax.swing.JLabel jlInsurer;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlNumberPermisson;
    private javax.swing.JLabel jlPermissonType;
    private javax.swing.JLabel jlPlate;
    private javax.swing.JLabel jlVehicleConfiguration;
    private javax.swing.JLabel jlVehicleType;
    private javax.swing.JLabel jlWei;
    private javax.swing.JLabel jlWei1;
    private javax.swing.JLabel jlYear;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecimalWeight;
    private sa.lib.gui.bean.SBeanFieldText moInsurancePolicy;
    private sa.lib.gui.bean.SBeanFieldKey moKeyInsurer;
    private sa.lib.gui.bean.SBeanFieldKey moKeyPermissonType;
    private sa.lib.gui.bean.SBeanFieldKey moKeyVehicleConfiguration;
    private sa.lib.gui.bean.SBeanFieldKey moKeyVehicleType;
    private sa.lib.gui.bean.SBeanFieldText moNumberPermisson;
    private sa.lib.gui.bean.SBeanFieldText moPlate;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    private sa.lib.gui.bean.SBeanFieldText moYear;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 720, 450);
        
        moKeyVehicleType.setKeySettings(miClient, SGuiUtils.getLabelName(jlVehicleType.getText()), true);
        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode.getText()), 10);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlName.getText()), 50);
        moPlate.setTextSettings(SGuiUtils.getLabelName(jlCode.getText()), 10);
        moYear.setTextSettings(SGuiUtils.getLabelName(jlYear.getText()), 4);
        moDecimalWeight.setDecimalSettings(SGuiUtils.getLabelName(jlWei), SGuiConsts.GUI_TYPE_DEC_QTY, true);
        moKeyVehicleConfiguration.setKeySettings(miClient, SGuiUtils.getLabelName(jlVehicleConfiguration.getText()), false);
        moKeyPermissonType.setKeySettings(miClient, SGuiUtils.getLabelName(jlPermissonType.getText()), false);
        moNumberPermisson.setTextSettings(SGuiUtils.getLabelName(jlNumberPermisson.getText()), 50, 0);
        moInsurancePolicy.setTextSettings(SGuiUtils.getLabelName(jlInsurancePolicy.getText()), 30, 0);
        moKeyInsurer.setKeySettings(miClient, SGuiUtils.getLabelName(jlInsurer.getText()), false);

        moFields.addField(moKeyVehicleType);
        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moPlate);
        moFields.addField(moYear);
        moFields.addField(moDecimalWeight);
        moFields.addField(moKeyVehicleConfiguration);
        moFields.addField(moKeyPermissonType);
        moFields.addField(moNumberPermisson);
        moFields.addField(moInsurancePolicy);
        moFields.addField(moKeyInsurer);
        
        moFields.setFormButton(jbSave);
    }

    @Override
    public void addAllListeners() {
        
    }

    @Override
    public void removeAllListeners() {
        
    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyVehicleType, SModConsts.LOGU_TP_VEH, SLibConsts.UNDEFINED, null);        
        
        SCfdXmlCatalogs catalogs = ((SSessionCustom) miClient.getSession().getSessionCustom()).getCfdXmlCatalogs();
        catalogs.populateComboBox(moKeyPermissonType, SDataConstantsSys.TRNS_CFD_CAT_BOL_PER_TP, miClient.getSession().getSystemDate());
        catalogs.populateComboBox(moKeyVehicleConfiguration, SDataConstantsSys.TRNS_CFD_CAT_BOL_MOTOR_CFG, miClient.getSession().getSystemDate());
        
        miClient.getSession().populateCatalogue(moKeyInsurer, SModConsts.LOG_INSURER, SLibConsts.UNDEFINED, null);
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbVehicle) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();
        
        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
            moYear.setText(miClient.getSession().getCurrentYear() + "");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
            moYear.setValue(moRegistry.getVehicleYear() + "");
        }
        
        moKeyVehicleType.setValue(new int[] { moRegistry.getFkVehicleTypeId() });
        moTextCode.setValue(moRegistry.getCode());
        moTextName.setValue(moRegistry.getName());
        moPlate.setValue(moRegistry.getPlate());
        SGuiUtils.locateItemByCode(moKeyVehicleConfiguration, moRegistry.getVehicleConfiguration());
        moDecimalWeight.setValue(moRegistry.getGrossWeight());
        SGuiUtils.locateItemByCode(moKeyPermissonType, moRegistry.getPermissonSctType());
        moNumberPermisson.setValue(moRegistry.getPermissonSctNumber());
        moInsurancePolicy.setValue(moRegistry.getInsurancePolicy());
        moKeyInsurer.setValue(new int [] { moRegistry.getFkInsurerId_n() });
        
        setFormEditable(true);
        
        if (moRegistry.isRegistryNew()) { }
        
        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbVehicle registry = moRegistry.clone();
        
        if (registry.isRegistryNew()) {}
        
        moRegistry.setFkVehicleTypeId(moKeyVehicleType.getValue()[0]);
        moRegistry.setCode(moTextCode.getValue());
        moRegistry.setName(moTextName.getValue());
        moRegistry.setPlate(moPlate.getValue());
        moRegistry.setVehicleYear(Integer.parseInt(moYear.getValue()));
        moRegistry.setVehicleConfiguration(moKeyVehicleConfiguration.getSelectedItem().getCode());
        moRegistry.setGrossWeight(moDecimalWeight.getValue());
        moRegistry.setPermissonSctType(moKeyPermissonType.getSelectedItem().getCode());
        moRegistry.setPermissonSctNumber(moNumberPermisson.getValue());
        moRegistry.setInsurancePolicy(moInsurancePolicy.getValue());
        moRegistry.setFkInsurerId_n(moKeyInsurer.getValue().length == 0 ? 0 : moKeyInsurer.getValue()[0]);
        
        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();
        
        if (validation.isValid()) {
            String split[] = moPlate.getValue().split(".*-? ");
            if (split.length > 1) {
                validation.setComponent(moPlate);
                validation.setMessage("La placa debe contener unicamente números y letras.");
            }
        }
        if (validation.isValid()) {
            try {
                Integer.parseInt(moYear.getValue());
            }
            catch (Exception e) {
                validation.setComponent(moYear);
                validation.setMessage("El año debe estar expresado en número.");
            }
        }
        
        return validation;
    }
}
