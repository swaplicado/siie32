/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.fin.form;


import erp.client.SClientInterface;
import erp.data.SDataConstantsSys;
import erp.data.SDataUtilities;
import erp.gui.account.SAccountConsts;
import erp.gui.account.SAccountUtils;
import erp.lib.SLibUtilities;
import erp.mcfg.data.SDataParamsCompany;
import erp.mod.SModConsts;
import java.awt.Cursor;
import java.util.Map;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import sa.gui.util.SUtilConsts;
import sa.lib.SLibTimeUtils;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanDialogReport;

/**
 *
 * @author Uriel Casta√±eda
 */
public class SDialogRepMovsIncExp extends SBeanDialogReport {
    
    /**
     * Creates new form SFormAccountingDeduction
     */
    public SDialogRepMovsIncExp(SGuiClient client, int formType, int formSubType, String title) {
        setFormSettings(client, formType, formSubType, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupSummary = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jlStartDate = new javax.swing.JLabel();
        moDateStartDate = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel4 = new javax.swing.JPanel();
        jlEndDate = new javax.swing.JLabel();
        moDateEndDate = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel10 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        moPanelStartAccount = new erp.gui.account.SBeanPanelAccount();
        jPanel3 = new javax.swing.JPanel();
        moPanelEndAccount = new erp.gui.account.SBeanPanelAccount();
        jPanel15 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jlCompanyBranch = new javax.swing.JLabel();
        moKeyCompanyBranch = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel22 = new javax.swing.JPanel();
        moRadSummary = new sa.lib.gui.bean.SBeanFieldRadio();
        jPanel23 = new javax.swing.JPanel();
        moRadDetail = new sa.lib.gui.bean.SBeanFieldRadio();
        jPanel21 = new javax.swing.JPanel();
        jckWithoutRelatedParty = new javax.swing.JCheckBox();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel12.setLayout(new java.awt.GridLayout(2, 1, 0, 5));

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlStartDate.setText("Fecha inicial:*");
        jlStartDate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlStartDate);
        jPanel6.add(moDateStartDate);

        jPanel12.add(jPanel6);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlEndDate.setText("Fecha final:*");
        jlEndDate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlEndDate);
        jPanel4.add(moDateEndDate);

        jPanel12.add(jPanel4);

        jPanel9.add(jPanel12, java.awt.BorderLayout.PAGE_START);

        jPanel2.add(jPanel9, java.awt.BorderLayout.NORTH);

        jPanel10.setLayout(new java.awt.BorderLayout());

        jPanel13.setLayout(new java.awt.GridLayout(2, 1, 0, 5));

        jPanel8.setLayout(new java.awt.BorderLayout());

        moPanelStartAccount.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuenta contable incial :"));
        jPanel8.add(moPanelStartAccount, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel8);

        jPanel3.setLayout(new java.awt.BorderLayout());

        moPanelEndAccount.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuenta contable final :"));
        jPanel3.add(moPanelEndAccount, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel3);

        jPanel10.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel10, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros del reporte:"));
        jPanel15.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel18.setLayout(new java.awt.GridLayout(4, 1, 0, 5));

        jPanel20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCompanyBranch.setText("Sucursal empresa:");
        jlCompanyBranch.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel20.add(jlCompanyBranch);

        moKeyCompanyBranch.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel20.add(moKeyCompanyBranch);

        jPanel18.add(jPanel20);

        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        groupSummary.add(moRadSummary);
        moRadSummary.setText("Resumen");
        jPanel22.add(moRadSummary);

        jPanel18.add(jPanel22);

        jPanel23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        groupSummary.add(moRadDetail);
        moRadDetail.setText("Detalle");
        jPanel23.add(moRadDetail);

        jPanel18.add(jPanel23);

        jPanel21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jckWithoutRelatedParty.setText("Sin partes relacionadas");
        jPanel21.add(jckWithoutRelatedParty);

        jPanel18.add(jPanel21);

        jPanel15.add(jPanel18, java.awt.BorderLayout.NORTH);

        jPanel1.add(jPanel15, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup groupSummary;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JCheckBox jckWithoutRelatedParty;
    private javax.swing.JLabel jlCompanyBranch;
    private javax.swing.JLabel jlEndDate;
    private javax.swing.JLabel jlStartDate;
    private sa.lib.gui.bean.SBeanFieldDate moDateEndDate;
    private sa.lib.gui.bean.SBeanFieldDate moDateStartDate;
    private sa.lib.gui.bean.SBeanFieldKey moKeyCompanyBranch;
    private erp.gui.account.SBeanPanelAccount moPanelEndAccount;
    private erp.gui.account.SBeanPanelAccount moPanelStartAccount;
    private sa.lib.gui.bean.SBeanFieldRadio moRadDetail;
    private sa.lib.gui.bean.SBeanFieldRadio moRadSummary;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 720, 450);

        moDateStartDate.setDateSettings(miClient, SGuiUtils.getLabelName(jlStartDate.getText()), true);
        moDateEndDate.setDateSettings(miClient, SGuiUtils.getLabelName(jlEndDate.getText()), true);
        moPanelStartAccount.setPanelSettings((SGuiClient) miClient, SAccountConsts.TYPE_ACCOUNT, true, true, false);
        moPanelEndAccount.setPanelSettings((SGuiClient) miClient, SAccountConsts.TYPE_ACCOUNT, true, true, false);
        
        moDateStartDate.setValue(SLibTimeUtils.getBeginOfMonth(miClient.getSession().getCurrentDate()));
        moDateEndDate.setValue(SLibTimeUtils.getEndOfMonth(miClient.getSession().getCurrentDate()));
        
        moPanelStartAccount.setAccountNameWidth(275);
        moPanelEndAccount.setAccountNameWidth(275);

        moPanelStartAccount.setComponentPrevious(moDateEndDate);
        moPanelStartAccount.setComponentNext(moPanelEndAccount.getTextNumberFirst());
        moPanelEndAccount.setComponentPrevious(moPanelStartAccount.getTextNumberFirst());
        moPanelEndAccount.setComponentNext(moKeyCompanyBranch);
        
        moPanelStartAccount.initPanel();
        moPanelEndAccount.initPanel();
        
        moRadSummary.setSelected(true);
        moRadDetail.setSelected(false);
        
        moFields.addField(moDateStartDate);
        moFields.addField(moDateEndDate);
        moFields.addField(moPanelStartAccount.getTextNumberFirst());
        
        moFields.setFormButton(jbPrint);
        
        populateCombo();
    }
    
    private void populateCombo() {
       miClient.getSession().populateCatalogue(moKeyCompanyBranch, SModConsts.BPSU_BPB, miClient.getSession().getConfigCompany().getCompanyId(), null); 
    }
    
    @Override
    protected void windowActivated() {
        if (mbFirstActivation) {
            mbFirstActivation = false;
            moPanelStartAccount.getTextNumberFirst().requestFocus();
        }
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        if (validation.isValid()) {
            validation = moPanelStartAccount.validatePanel();

            if (validation.isValid()) {
                validation = moPanelEndAccount.validatePanel();
                
                if (validation.isValid()) {
                    if (moPanelStartAccount.getSelectedAccount().getCodeStd().compareTo(moPanelEndAccount.getSelectedAccount().getCodeStd()) > 1) {
                        validation.setComponent(moPanelEndAccount);
                        validation.setMessage("El valor de la cuenta contable final debe ser mayor o igual al valor de la cuenta contable inicial.");
                    }
                    else if (moDateEndDate.getValue().compareTo(moDateStartDate.getValue()) < 0) {
                        validation.setMessage("La fecha final debe ser mayor o igual a la fecha inicial.");
                        validation.setComponent(moDateEndDate);
                    }
                }
            }
        }
        return validation;
    }
   
    @Override
    public void actionPrint() {
        String title = "";
        Cursor cursor = getCursor();
        Map<String, Object> map = null;
        JasperPrint jasperPrint = null;
        JasperViewer jasperViewer = null;
        

        if (SGuiUtils.computeValidation(miClient, validateForm())) {
            try {
                title = "Reporte " + (mnFormType == SDataConstantsSys.TRNS_CT_DPS_SAL ? "de ingresos" : "de egresos") + (mnFormSubtype == SUtilConsts.QRY_SUM ? " contables netos" : " contables netos y sus ajustes");
                
                setCursor(new Cursor(Cursor.WAIT_CURSOR));

                map = miClient.createReportParams();
                map.put("tDtInitial", moDateStartDate.getValue());
                map.put("tDtEnd", moDateEndDate.getValue());
                map.put("sLocalCurrency", miClient.getSession().getSessionCustom().getLocalCurrency());
                map.put("bShowDetail", moRadDetail.isSelected());
                map.put("nFidCtDps", mnFormType);
                map.put("sCompanyBranch", moKeyCompanyBranch.getValue().length == 0 ? " (TODAS)" : moKeyCompanyBranch.getSelectedItem().getItem());
                map.put("sTitle", title.toUpperCase());
                map.put("sSqlWhereCompanyBranch", moKeyCompanyBranch.getValue().length == 0 ? "" : " AND r.fid_cob = " + ((int []) moKeyCompanyBranch.getValue())[0]);
                map.put("sSqlWhereWithoutRelatedParty", jckWithoutRelatedParty.isSelected() ? " AND bp.b_att_rel_pty = 0 " : "");
                map.put("sAccStartCode", SAccountUtils.convertCodeUsr(((SDataParamsCompany) miClient.getSession().getConfigCompany()).getMaskAccount(), moPanelStartAccount.getSelectedAccount().getCodeStd()));
                map.put("sAccEndCode", SAccountUtils.convertCodeUsr(((SDataParamsCompany) miClient.getSession().getConfigCompany()).getMaskAccount(), moPanelEndAccount.getSelectedAccount().getCodeStd()));

                jasperPrint = SDataUtilities.fillReport((SClientInterface) miClient , mnFormSubtype == SUtilConsts.QRY_SUM ? SDataConstantsSys.REP_FIN_PS_CL_ITEM_TOT : SDataConstantsSys.REP_FIN_PS_CL_ITEM, map);
                jasperViewer = new JasperViewer(jasperPrint, false);
                jasperViewer.setTitle(title);
                jasperViewer.setVisible(true);
                
            }
            catch(Exception e) {
                SLibUtilities.renderException(this, e);
            }
            finally {
                setCursor(cursor);
            }
        }
    }

    @Override
    public void createParamsMap() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
