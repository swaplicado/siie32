/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.hrs.form;

import erp.mod.SModConsts;
import erp.mod.hrs.db.SDbPaysheetCustomType;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;

/**
 *
 * @author Edwin Carmona, Sergio Flores
 */
public class SFormPaysheetCustomType extends SBeanForm {

    private SDbPaysheetCustomType moRegistry;

    /**
     * Creates new form SFormMwzType
     */
    public SFormPaysheetCustomType(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.HRSU_TP_PAY_SHT_CUS, 0, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel5 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel7 = new javax.swing.JPanel();
        jlHint = new javax.swing.JLabel();
        moTextHint = new sa.lib.gui.bean.SBeanFieldText();
        jlHintHint = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        moBoolOneOff = new sa.lib.gui.bean.SBeanFieldBoolean();
        jlOneOffHint = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(5, 1, 0, 5));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:*");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlCode);

        moTextCode.setText("TEXT");
        jPanel4.add(moTextCode);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlName);

        moTextName.setText("TEXT");
        moTextName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel5.add(moTextName);

        jPanel2.add(jPanel5);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlHint.setForeground(new java.awt.Color(0, 102, 102));
        jlHint.setText("Texto aclaratorio:");
        jlHint.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlHint);

        moTextHint.setText("TEXT");
        jPanel7.add(moTextHint);

        jlHintHint.setForeground(java.awt.Color.gray);
        jlHintHint.setText("(Para el asunto del correo-e de recibos.)");
        jlHintHint.setPreferredSize(new java.awt.Dimension(225, 23));
        jPanel7.add(jlHintHint);

        jPanel2.add(jPanel7);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moBoolOneOff.setText("No repetible");
        jPanel6.add(moBoolOneOff);

        jlOneOffHint.setForeground(java.awt.Color.gray);
        jlOneOffHint.setText("(El número de nómina no es repetible en el mismo año.)");
        jlOneOffHint.setPreferredSize(new java.awt.Dimension(325, 23));
        jPanel6.add(jlOneOffHint);

        jPanel2.add(jPanel6);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel2.add(jPanel8);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlHint;
    private javax.swing.JLabel jlHintHint;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlOneOffHint;
    private sa.lib.gui.bean.SBeanFieldBoolean moBoolOneOff;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextHint;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);

        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode), 10);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlName), 50);
        moTextHint.setTextSettings(SGuiUtils.getLabelName(jlHint), 10, 0);
        moTextHint.setTextCaseType(0); // preserve case of text in user input
        moBoolOneOff.setBooleanSettings(SGuiUtils.getLabelName(moBoolOneOff.getText()), false);

        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moTextHint);
        moFields.addField(moBoolOneOff);

        moFields.setFormButton(jbSave);
    }

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {

    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbPaysheetCustomType) registry;

        mnFormResult = 0;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            moRegistry.setSystem(false); // all editable registries are non-system
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moTextCode.setValue(moRegistry.getCode());
        moTextName.setValue(moRegistry.getName());
        moTextHint.setValue(moRegistry.getHint());
        moBoolOneOff.setValue(moRegistry.isOneOff());

        setFormEditable(true);

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbPaysheetCustomType registry = moRegistry.clone();

        if (registry.isRegistryNew()) { }

        registry.setCode(moTextCode.getValue());
        registry.setName(moTextName.getValue());
        registry.setHint(moTextHint.getValue());
        registry.setOneOff(moBoolOneOff.getValue());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        return validation;
    }
}
