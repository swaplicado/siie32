/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.hrs.form;

import erp.mod.SModConsts;
import erp.mod.hrs.db.SDbFirstDayYear;
import java.util.Date;
import sa.lib.SLibConsts;
import sa.lib.SLibTimeUtils;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;

/**
 *
 * @author Sergio Flores
 */
public class SFormFirstDayYear extends SBeanForm {

    private SDbFirstDayYear moRegistry;

    /**
     * Creates new form SFormFirstDayYear
     */
    public SFormFirstDayYear(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.HRS_FDY, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlYear = new javax.swing.JLabel();
        moIntYear = new sa.lib.gui.bean.SBeanFieldInteger();
        jPanel5 = new javax.swing.JPanel();
        jlFirstDayYear = new javax.swing.JLabel();
        moDateFirstDayYear = new sa.lib.gui.bean.SBeanFieldDate();
        jlBankHelp = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(3, 1, 0, 5));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlYear.setForeground(new java.awt.Color(0, 0, 255));
        jlYear.setText("Año:*");
        jlYear.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlYear);

        moIntYear.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel4.add(moIntYear);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFirstDayYear.setText("Primer día año:*");
        jlFirstDayYear.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlFirstDayYear);
        jPanel5.add(moDateFirstDayYear);

        jlBankHelp.setForeground(new java.awt.Color(109, 109, 109));
        jlBankHelp.setText("(Debe coincidir con configuración del módulo)");
        jlBankHelp.setPreferredSize(new java.awt.Dimension(225, 23));
        jPanel5.add(jlBankHelp);

        jPanel2.add(jPanel5);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel jlBankHelp;
    private javax.swing.JLabel jlFirstDayYear;
    private javax.swing.JLabel jlYear;
    private sa.lib.gui.bean.SBeanFieldDate moDateFirstDayYear;
    private sa.lib.gui.bean.SBeanFieldInteger moIntYear;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);

        moIntYear.setIntegerSettings(SGuiUtils.getLabelName(jlYear.getText()), SGuiConsts.GUI_TYPE_INT_CAL_YEAR, true);
        moDateFirstDayYear.setDateSettings(miClient, SGuiUtils.getLabelName(jlFirstDayYear.getText()), true);

        moFields.addField(moIntYear);
        moFields.addField(moDateFirstDayYear);

        moFields.setFormButton(jbSave);
    }

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {

    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        int year = SLibConsts.UNDEFINED;

        moRegistry = (SDbFirstDayYear) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            year = miClient.getSession().getCurrentYear();
            jtfRegistryKey.setText("");
        }
        else {
            year = moRegistry.getPkFirstDayYearId();
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moIntYear.setValue(year);
        moDateFirstDayYear.setValue(moRegistry.getFirstDayYear());

        setFormEditable(true);

        if (moRegistry.isRegistryNew()) {
            moIntYear.setEditable(true);
        }
        else {
            moIntYear.setEditable(false);
        }

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbFirstDayYear registry = moRegistry.clone();

        if (registry.isRegistryNew()) {
            registry.setPkFirstDayYearId(moIntYear.getValue());
        }

        registry.setFirstDayYear(moDateFirstDayYear.getValue());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        Date min = null;
        Date max = null;
        SGuiValidation validation = moFields.validateFields();

        if (validation.isValid()) {
            if (moIntYear.getValue() < 2000 || moIntYear.getValue() > 2100) {
                validation.setMessage(SGuiConsts.ERR_MSG_FIELD_VAL_ + "'" + SGuiUtils.getLabelName(jlYear) + "'" +
                        SGuiConsts.ERR_MSG_FIELD_VAL_GREAT_EQUAL + "2001 y" +
                        SGuiConsts.ERR_MSG_FIELD_VAL_LESS_EQUAL + "2100.");
                validation.setComponent(moIntYear);
            }
            else {
                min = SLibTimeUtils.createDate(moIntYear.getValue() - 1, 12, 26);   // minimum FDY: 6 days in previous year, only 1 day in current year
                max = SLibTimeUtils.createDate(moIntYear.getValue(), 1, 7);         // maximum FDY: only 1 day in previous year, 6 days in current year

                if (moDateFirstDayYear.getValue().before(min) || moDateFirstDayYear.getValue().after(max)) {
                    validation.setMessage(SGuiConsts.ERR_MSG_FIELD_DATE_ + "'" + SGuiUtils.getLabelName(jlFirstDayYear) + "'" +
                            SGuiConsts.ERR_MSG_FIELD_DATE_GREAT_EQUAL + SLibUtils.DateFormatDate.format(min) + " y" +
                            SGuiConsts.ERR_MSG_FIELD_DATE_LESS_EQUAL + SLibUtils.DateFormatDate.format(max) + ".");
                    validation.setComponent(moDateFirstDayYear);
                }
            }
        }

        return validation;
    }
}
